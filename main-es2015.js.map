{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/panel/panel-routing.module.ts","./src/app/panel/panel.component.ts","./src/app/panel/panel.component.html","./src/app/panel/panel.module.ts","./src/app/panel/profile/profile.component.ts","./src/app/panel/profile/profile.component.html","./src/app/panel/profile/profile.module.ts","./src/app/panel/resume-form/resume-form.component.ts","./src/app/panel/resume-form/resume-form.component.html","./src/app/panel/resume-form/resume-form.module.ts","./src/app/panel/resumes/resumes.component.ts","./src/app/panel/resumes/resumes.component.html","./src/app/panel/resumes/resumes.module.ts","./src/app/resume/course-group/course-group.component.ts","./src/app/resume/course-group/course-group.component.html","./src/app/resume/data-group/data-group.component.ts","./src/app/resume/data-group/data-group.component.html","./src/app/resume/experience-group/experience-group.component.ts","./src/app/resume/experience-group/experience-group.component.html","./src/app/resume/resume.component.ts","./src/app/resume/resume.component.html","./src/app/resume/resume.module.ts","./src/app/shared/components/alert/alert.component.ts","./src/app/shared/components/alert/alert.component.html","./src/app/shared/components/alert/alert.module.ts","./src/app/shared/components/alert/alert.service.ts","./src/app/shared/components/box-content/box-content.component.ts","./src/app/shared/components/box-content/box-content.component.html","./src/app/shared/components/box-content/box-content.module.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/footer/footer.module.ts","./src/app/shared/components/form/form.module.ts","./src/app/shared/components/form/input-field/input-field.component.ts","./src/app/shared/components/form/input-field/input-field.component.html","./src/app/shared/components/form/input-field/input-field.module.ts","./src/app/shared/components/form/select/select.component.ts","./src/app/shared/components/form/select/select.component.html","./src/app/shared/components/form/select/select.module.ts","./src/app/shared/components/form/textarea-field/textarea-field.component.ts","./src/app/shared/components/form/textarea-field/textarea-field.component.html","./src/app/shared/components/form/textarea-field/textarea-field.module.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/header/header.module.ts","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/login/login.module.ts","./src/app/shared/components/login/login.service.ts","./src/app/shared/components/popup/popup.component.ts","./src/app/shared/components/popup/popup.component.html","./src/app/shared/components/popup/popup.module.ts","./src/app/shared/components/register/register.component.ts","./src/app/shared/components/register/register.component.html","./src/app/shared/components/register/register.module.ts","./src/app/shared/components/register/register.service.ts","./src/app/shared/interceptors/auth.interceptor.ts","./src/app/shared/mocks/resumes.mock.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/resume.service.ts","./src/app/shared/services/resumes.service.ts","./src/app/shared/services/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./panel/panel.module\": \"./src/app/panel/panel.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule } from \"@angular/router\";\n\nimport { ResumeComponent } from \"./resume/resume.component\";\nimport { HomeComponent } from \"./home/home.component\";\n\nconst routes: Route[] = [\n    { path: '', component: ResumeComponent },\n    { path: 'panel', loadChildren: './panel/panel.module#PanelModule' },\n    { path: 'home', component: HomeComponent }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    \n}\n","<router-outlet></router-outlet>\n<app-alert></app-alert>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ResumeModule } from './resume/resume.module';\nimport { HomeModule } from './home/home.module';\nimport { PanelModule } from './panel/panel.module';\nimport { AlertModule } from './shared/components/alert/alert.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ResumeModule,\n    HomeModule,\n    PanelModule,\n    AlertModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\n\nimport { LoginService } from '../shared/components/login/login.service';\nimport { RegisterService } from '../shared/components/register/register.service';\n\n@Component({\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n    constructor(\n        private loginService: LoginService,\n        private registerService: RegisterService\n    ) {}\n\n    login() {\n        this.loginService.showLogin()\n    }\n\n    register() {\n        this.registerService.showWindow()\n    }\n}","<div class=\"panel\">\n    <header>\n        <div class=\"content\">\n            <img src=\"/assets/images/banner-home-curriculos.png\" alt=\"Meus Currículos\">\n            <h1 class=\"title\">Meus Currículos</h1>\n            <p>Cadastre seu currículo e crie modelos profissionais e criativos. Tenha seu currículo online ou se preferir faça o download para impressão. Aumente suas chances no mercado de trabalho e utilize este site de forma totalmente gratuita.</p>\n        </div>\n        <button class=\"bt primary\" (click)=\"login()\">Entrar</button>\n    </header>\n    <section class=\"content\">\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-cadastro.png\" alt=\"Cadastre seus currículo\">\n            <p>Cadastre os dados do seu currículo, informações pessoais, habilidades, treinamentos e experiência professional</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-modelos.png\" alt=\"Escolha um modelo\">\n            <p>Escolha um dos modelos de layout e um estilo de cor da sua preferência</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-versoes.png\" alt=\"Crie versões\">\n            <p>Tenha mais de uma versão do seu currículo, fazendo alterações do objetivo, destacando cursos e habilidades aumentando suas chances no mercado de trabalho</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-pdf.png\" alt=\"Baixe em pdf\">\n            <p>Gere PDF para ter seu currículo impresso ou compartilhe como preferir e tenha também seu currículo online para desktop e celular, sempre atualizado</p>\n        </div>\n    </section>\n    <button class=\"bt primary\" (click)=\"register()\">Cadastre-se</button>\n    <app-footer></app-footer>\n    <app-login></app-login>\n    <app-register></app-register>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeComponent } from \"./home.component\";\nimport { FooterModule } from '../shared/components/footer/footer.module';\nimport { LoginModule } from '../shared/components/login/login.module';\nimport { RegisterModule } from '../shared/components/register/register.module';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        FooterModule,\n        LoginModule,\n        RegisterModule\n    ]\n})\nexport class HomeModule {}","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ResumesComponent } from './resumes/resumes.component';\nimport { PanelComponent } from './panel.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ResumeFormComponent } from './resume-form/resume-form.component';\n\nconst routes: Routes = [\n    { path: '', component: PanelComponent, children: [\n        { path: '', pathMatch: 'full', redirectTo: 'resumes'},\n        { path: 'resumes', component: ResumesComponent },\n        { path: 'profile', component: ProfileComponent },\n        { path: 'resume-form', component: ResumeFormComponent },\n        { path: 'resume-form/:id', component: ResumeFormComponent }\n    ]}\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class PanelRoutingModule {}","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent {}","<div class=\"panel\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>","import { NgModule } from \"@angular/core\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { PanelComponent } from './panel.component';\nimport { PanelRoutingModule } from './panel-routing.module';\nimport { HeaderModule } from '../shared/components/header/header.module';\nimport { FooterModule } from '../shared/components/footer/footer.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { AuthInterceptor } from '../shared/interceptors/auth.interceptor';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { ResumeFormModule } from './resume-form/resume-form.module';\n\n@NgModule({\n    declarations: [\n        PanelComponent\n    ],\n    imports: [\n        PanelRoutingModule,\n        HeaderModule,\n        FooterModule,\n        ProfileModule,\n        ResumesModule,\n        ResumeFormModule\n    ],\n    providers: [\n        // Intercepta as conexões para adicionar o token no cabeçalho\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n    ]\n})\nexport class PanelModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { AlertService } from 'src/app/shared/components/alert/alert.service';\nimport { UsersService } from 'src/app/shared/services/users.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n    formProfile: FormGroup\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private alertService: AlertService,\n        private usersService: UsersService\n    ) {}\n\n    ngOnInit() {\n        this.initForm()\n        this.loadData()\n    }\n\n    initForm() {\n        this.formProfile = this.formBuilder.group({\n            fullName: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['********', Validators.required]\n        })\n    }\n\n    loadData() {\n        this.usersService.getData()\n        .subscribe((response: any) => {\n            const {fullName, email} = response\n            this.formProfile.setValue({fullName, email, password: '********'})\n        })\n    }\n\n    btSave() {\n        if (this.formProfile.valid) {\n            const { fullName, email, password } = this.formProfile.value\n\n            this.usersService.update(fullName, email)\n            .subscribe(response => {\n                if (response.status === 'success') {\n                    this.alertService.msgSuccess('Dados salvos com sucesso!')\n                }\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 400) {\n                    const errorMessage: string = <string>Object.values(error.error.message[0].constraints)[0]\n                    this.alertService.msgError(errorMessage)\n                } else if (error.status === 403) {\n                    this.alertService.msgError(error.error.message)\n                } else {\n                    this.alertService.msgError('Ocorreu um erro, tente novamente!')\n                }\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<section class=\"panel-content\">\n    <h1 class=\"page-title\">Meus Dados</h1>\n    <div class=\"page-box\">\n        <form [formGroup]=\"formProfile\">\n            <input type=\"text\" name=\"fullName\" id=\"fullName\" placeholder=\"Nome Completo\" formControlName=\"fullName\">\n            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        </form>\n        <div class=\"buttons\">\n            <button class=\"bt primary\" (click)=\"btSave()\">Salvar</button>\n        </div>\n        <div class=\"bg\"></div>\n    </div>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ProfileComponent } from './profile.component';\n\n@NgModule({\n    declarations: [\n        ProfileComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ]\n})\nexport class ProfileModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ResumesService } from 'src/app/shared/services/resumes.service';\nimport { SelectOption } from 'src/app/shared/interfaces/select-option.interface';\n\n@Component({\n    templateUrl: './resume-form.component.html',\n    styleUrls: ['./resume-form.component.scss']\n})\nexport class ResumeFormComponent implements OnInit {\n    formResume: FormGroup\n    resumeId: string\n    modelOptions: SelectOption[]\n    styleOptions: SelectOption[]\n    skillType: string = ''\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private location: Location,\n        private resumesService: ResumesService,\n        private route: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.modelOptions = [\n            {key: 'modern', value: 'Moderno'},\n            {key: 'classic', value: 'Classico'}\n        ]\n        this.styleOptions = [\n            {key:'gray', value:'Cinza'},\n            {key:'brown', value:'Marrom'},\n            {key:'pink', value:'Rosa'}\n        ]\n        this.route.params.subscribe(params => this.resumeId = params['id'])\n        this.initForm()\n\n        if (this.resumeId) this.loadData()\n    }\n\n    initForm() {\n        this.formResume = this.formBuilder.group({\n            name: [''],\n            description: [''],\n            domain: [''],\n            model: ['modern'],\n            style: ['brown'],\n            resume: this.formBuilder.group({\n                name: [''],\n                occupation: [''],\n                dateOfBirth: [''],\n                email: [''],\n                mobile: [''],\n                mobile2: [''],\n                address: [''],\n                aboutMe: [''],\n                professionalGoals: [''],\n                skills: this.formBuilder.array([])\n            })\n        })\n    }\n\n    loadData() {\n        this.resumesService.getOne(this.resumeId)\n        .subscribe(response => {\n            //const {_id, userId, __v, ...resume} = response\n            //this.formResume.setValue(resume)\n            const dateOfBirth = new Date(response['resume']['dateOfBirth'])\n            const dateOfBirthStr = ('0' + dateOfBirth.getDate()).slice(-2) + '/' + ('0' + (dateOfBirth.getMonth() + 1)).slice(-2) + '/' + dateOfBirth.getFullYear()\n\n            this.formResume.setValue({\n                name: response['name'],\n                description: response['description'],\n                domain: response['domain'] || '',\n                model: response['model'],\n                style: response['style'],\n                resume: {\n                    name: response['resume']['name'],\n                    occupation: response['resume']['occupation'],\n                    dateOfBirth: response['resume']['dateOfBirth'],\n                    email: response['resume']['email'] || '',\n                    mobile: response['resume']['mobile'] || '',\n                    mobile2: response['resume']['mobile2'] || '',\n                    address: response['resume']['address'] || '',\n                    aboutMe: response['resume']['aboutMe'],\n                    professionalGoals: response['resume']['professionalGoals'],\n                    skills: []\n                }\n            })\n            for (let skill of response['resume']['skills']) {\n                this.skillType = skill['skillType']\n                //this.addSkillType()\n            }\n        })\n    }\n\n    addSkillGroup() {\n        const formSkills = this.formResume.get('resume.skills') as FormArray\n        formSkills.push(this.formBuilder.group({\n            skillType: [''],\n            skillNames: [[]]\n        }))\n    }\n\n    addSkill(skillForm) {\n        console.log('addSkill', skillForm)\n    }\n\n    btCancel() {\n        this.location.back()\n    }\n\n    btSave() {\n        let resume = this.formResume.value\n        const dateOfBirthStr:string = this.formResume.get('resume.dateOfBirth').value\n        console.log(dateOfBirthStr, +dateOfBirthStr)\n        console.log(this.formResume.get('resume.dateOfBirth'))\n        const dateOfBirth = new Date(+dateOfBirthStr.substr(4,4), +dateOfBirthStr.substr(2,2) -1, +dateOfBirthStr.substr(0,2))\n        console.log(dateOfBirth)\n        //resume['resume']['dateOfBirth'] = dateOfBirth \n        //return console.log(resume)\n\n        console.log(resume)\n        //return\n        if (this.resumeId) {\n            this.resumesService.update(this.resumeId, resume)\n            .subscribe(response => (response['status'] === 'success') && this.location.back())\n        } else {\n            this.resumesService.create(resume)\n            .subscribe(response => (response['status'] === 'success') && this.location.back())\n        }\n    }\n}","<section class=\"panel-content\">\n    <h1 class=\"page-title\">Cadastro de Currículo</h1>\n    <app-box-content>\n        <form [formGroup]=\"formResume\">\n            <h3 class=\"sub-title\">Dados da Aplicação</h3>\n            <div class=\"form-line\">\n                <div class=\"form-col\">\n                    <app-input-field label=\"Nome do Currículo\" placeholder=\"Ex.: Currículo padrão\" formControlName=\"name\"></app-input-field>\n                    <app-input-field label=\"Domínio\" placeholder=\"Ex.: seumone.com.br\" formControlName=\"domain\"></app-input-field>\n                    <app-select label=\"Modelo\" [options]=\"modelOptions\" formControlName=\"model\"></app-select>\n                    <app-select label=\"Estilo\" [options]=\"styleOptions\" formControlName=\"style\"></app-select>\n                </div>\n                <div class=\"form-col\">\n                    <app-textarea-field \n                        label=\"Descrição\" \n                        formControlName=\"description\"\n                        placeholder=\"Informações sobre esta versão do currículo. Esse texto apenas ficará visível em seu painel, mas não irá aparecer dentro do currículo\">\n                    </app-textarea-field>\n                </div>\n            </div>\n            <ng-container formGroupName=\"resume\">\n                <h3 class=\"sub-title\">Informações de Contato</h3>\n                <div class=\"form-line\">\n                    <div class=\"form-col\">\n                        <app-input-field label=\"Nome Completo\" formControlName=\"name\"></app-input-field>\n                        <div class=\"form-line\">\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Ocupação / Cargo\" formControlName=\"occupation\"></app-input-field>\n                            </div>\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Data de Nascimento\" formControlName=\"dateOfBirth\" placeHoder=\"Digite no formato dd/mm/aaaa\"></app-input-field>\n                            </div>\n                        </div>\n                        <app-input-field label=\"E-mail\" formControlName=\"email\"></app-input-field>\n                        <div class=\"form-line\">\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Telefone\" formControlName=\"mobile\"></app-input-field>\n                            </div>\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Telefone 2\"></app-input-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-col photo\">\n                        <div class=\"photo\"></div>\n                    </div>\n                </div>\n                <app-input-field label=\"Endereço\"></app-input-field>\n                <h3 class=\"sub-title\">Apresentação</h3>\n                <div class=\"form-line\">\n                    <div class=\"form-col\">\n                        <app-textarea-field \n                            label=\"Sobre mim\" \n                            formControlName=\"aboutMe\"\n                            placeholder=\"Escreva um pouco sobre você, sua experiência profissional e ou acadêmica, seus hobbies e o que mais quiser apresentar no seu currículo, essa é sua apresentação no currículo e muito importante\"\n                            rows=10>\n                        </app-textarea-field>\n                        <app-textarea-field \n                            label=\"Objetivo Profissional\" \n                            formControlName=\"professionalGoals\"\n                            placeholder=\"Fale sobre o seu objetivo atual, o que está procurando e seus planos para o futuro\"\n                            rows=10>\n                        </app-textarea-field>\n                    </div>\n                </div>\n                <div class=\"sub-title-plus\">\n                    <span>Qualificações</span>\n                    <div class=\"bt-add-box\" (click)=\"addSkillGroup()\"></div>\n                </div>\n                <div class=\"box-group\" *ngFor=\"let skillForm of formResume.get('resume.skills')['controls']\" [formGroup]=\"skillForm\">\n                    <div class=\"form-line\">\n                        <div class=\"form-col\">\n                            <app-input-field label=\"Tipo de Qualificação\" formControlName=\"skillType\"></app-input-field>\n                        </div>\n                        <div class=\"form-col\">\n                            <div class=\"form-line\">\n                                <app-input-field label=\"Habilidade / Ferramenta\" #skill></app-input-field>\n                                <div class=\"bt-add-item\" (click)=\"addSkill(skill)\"></div>\n                                <div class=\"bt-remove-box\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <ng-container *ngFor=\"let skillGroup of formResume.get('resume.skills')['controls']\">\n                    <div [formGroup]=\"skillGroup\">\n                        <input type=\"text\" formControlName=\"skillType\">\n                        <span>Type: {{skillGroup.get('skillType').value}}</span>\n                        <p *ngFor=\"let tool of skillGroup.get('tools').value\">{{tool}}</p>\n                    </div>\n                </ng-container> -->\n            </ng-container>\n        </form>\n        <div class=\"buttons\">\n            <button class=\"bt secondary\" (click)=\"btCancel()\">Cancelar</button>\n            <button class=\"bt primary\" (click)=\"btSave()\">Salvar</button>\n        </div>\n    </app-box-content>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { ResumeFormComponent } from './resume-form.component';\nimport { BoxContentModule } from 'src/app/shared/components/box-content/box-content.module';\nimport { SelectModule } from 'src/app/shared/components/form/select/select.module';\nimport { FormModule } from 'src/app/shared/components/form/form.module';\n\n@NgModule({\n    declarations: [\n        ResumeFormComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        BoxContentModule,\n        SelectModule,\n        FormModule,\n        NgxMaskModule.forRoot(),\n        FormsModule\n    ],\n    exports: [\n        ResumeFormComponent\n    ]\n})\nexport class ResumeFormModule {}","import { Component, OnInit } from \"@angular/core\";\n\nimport { ResumesService } from 'src/app/shared/services/resumes.service';\n\n@Component({\n    templateUrl: './resumes.component.html',\n    styleUrls: ['./resumes.component.scss']\n})\nexport class ResumesComponent implements OnInit {\n\n    resumes$: any\n\n    constructor(\n        private resumesService: ResumesService\n    ) {}\n\n    ngOnInit() {\n        this.getResumes()\n    }\n\n    getResumes() {\n        this.resumes$ =this.resumesService.getAll()\n    }\n\n    btDelete(resumeId: string) {\n        this.resumesService.delete(resumeId)\n        .subscribe(response => this.getResumes())\n    }\n}","<section class=\"panel-content\">\n    <div class=\"header\">\n        <h1 class=\"page-title\">Meus Currículos</h1>\n        <div class=\"bt primary\" routerLink=\"/panel/resume-form\">Criar Novo</div>\n    </div>\n    <ng-container *ngIf=\"resumes$ | async as resumes\">\n        <div class=\"page-box\" *ngFor=\"let resume of resumes\">\n            <div class=\"field\">\n                <label>Nome do Currículo</label>\n                <span>{{resume.name}}</span>\n            </div>\n            <div class=\"field\">\n                <label>Descrição</label>\n                <span>{{resume.description}}</span>\n            </div>\n            <div class=\"field\" *ngIf=\"resume.domain\">\n                <label>Domínio</label>\n                <span>{{resume.domain}}</span>\n            </div>\n            <button class=\"bt-icon share\"></button>\n            <button class=\"bt-icon preview\"></button>\n            <div class=\"buttons\">\n                <button class=\"bt secondary\" [routerLink]=\"['/panel/resume-form',resume._id]\">Editar</button>\n                <button class=\"bt primary\" (click)=\"btDelete(resume._id)\">Excluir</button>\n            </div>\n        </div>\n    </ng-container>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ResumesComponent } from './resumes.component';\nimport { BoxContentModule } from 'src/app/shared/components/box-content/box-content.module';\n\n@NgModule({\n    declarations: [\n        ResumesComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        BoxContentModule\n    ]\n})\nexport class ResumesModule {}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-course-group',\n  templateUrl: './course-group.component.html',\n  styleUrls: ['./course-group.component.scss']\n})\nexport class CourseGroupComponent implements OnInit {\n\n  @Input() title: string\n  @Input() data: string\n  @Input() show: boolean = true\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","<ng-container *ngIf=\"show\">\n    <label>{{title}}</label>\n    <span>{{data}}</span>\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-data-group',\n  templateUrl: './data-group.component.html',\n  styleUrls: ['./data-group.component.scss']\n})\nexport class DataGroupComponent implements OnInit {\n\n  @Input() title: string\n  @Input() data: string\n  @Input() dataLines: string[]\n  @Input() dataWords: string[]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<label>{{title}}</label>\n<span>{{data}}</span>\n<span *ngFor=\"let line of dataLines\">{{line}}</span>\n<span>\n  <ng-container *ngFor=\"let word of dataWords; last as last\">{{word}}<ng-container *ngIf=\"!last\">, </ng-container></ng-container>\n</span>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-experience-group',\n  templateUrl: './experience-group.component.html',\n  styleUrls: ['./experience-group.component.scss']\n})\nexport class ExperienceGroupComponent implements OnInit {\n\n  @Input() dateFrom: string\n  @Input() dateTo: string\n  @Input() title: string\n  @Input() subTitle: string\n  @Input() data: string\n  @Input() dataLines: string[]\n  @Input() show: boolean = true\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","<div class=\"row-flex\" *ngIf=\"show === true\">\n  <div class=\"col left\">\n    <span>{{dateFrom}}</span>\n    <ng-container *ngIf=\"dateTo\">\n      <span>até</span>\n      <span>{{dateTo}}</span>\n    </ng-container>\n  </div>\n  <div class=\"col right\">\n      <label class=\"title\">{{title}}</label>\n      <label class=\"sub-title\">{{subTitle}}</label>\n      <span [innerHTML]=\"data\"></span>\n      <span *ngFor=\"let line of dataLines\" [innerHTML]=\"line\"></span>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\n\nimport { ResumeService } from \"../shared/services/resume.service\";\nimport { ResumesService } from '../shared/services/resumes.service';\n\n@Component({\n    selector: 'app-resume',\n    templateUrl: './resume.component.html',\n    styleUrls: [\n        './resume.component.scss',\n        './styles/brown-style.scss',\n        './styles/pink-style.scss',\n        './styles/gray-style.scss'\n    ]\n})\nexport class ResumeComponent implements OnInit {\n    resume: any\n    styleName: string\n\n    constructor(\n        private resumeService: ResumeService,\n        private resumesService: ResumesService,\n        private route: ActivatedRoute,\n        private titleService: Title\n    ) {}\n\n    ngOnInit() {\n        const hostname = window.location.hostname\n        const resumeId = this.route.snapshot.queryParams.resumeId\n\n        console.log(this.route.snapshot.queryParams)\n        if (hostname === 'localhost' && !resumeId ) {\n            // Carrega os dados do currículo (utilizando mock local, sem banco de dados)\n            this.resume = this.resumeService.getResume(0)\n            this.styleName = 'brow'\n        } else {\n            this.resumesService.getByHost('danielvazmartins.com.br')\n        .subscribe(response => {\n            console.log(response)\n            this.resume = response['resume']\n        })\n        }\n\n        // Pega os parâmetro da URL\n        //const resumeId = this.route.snapshot.queryParams.resumeId || this.resumeService.getResumeId(hostname)\n        //this.styleName = this.route.snapshot.queryParams.style || this.resumeService.getStyleName(hostname)\n\n\n        // Altera o title do navegador\n        //this.titleService.setTitle(this.resume.name)\n\n        \n    }\n}","<div class=\"style\" [ngClass]=\"styleName\" *ngIf=\"resume\">\n    <div class=\"header\">\n      <h1>{{resume.name}}</h1>\n      <p>{{resume.occupation}}</p>\n    </div>\n    <div class=\"box-resume\">\n      <div class=\"sidebar\">\n          <div class=\"perfil-img\" *ngIf=\"resume.foto\">\n            <img [src]=\"resume.foto\">\n          </div>\n          <app-data-group *ngIf=\"resume.mobile || resume.email || resume.linkedIn || resume.github\" title=\"Contato\" [dataLines]=\"[resume.mobile, resume.mobile2, resume.email, resume.linkedIn, resume.github]\"></app-data-group>\n          <app-data-group *ngIf=\"resume.address\" title=\"Endereço\" [dataLines]=\"resume.address\"></app-data-group>\n          <app-data-group *ngIf=\"resume.dateOfBirth\" title=\"Data de nascimento\" [data]=\"resume.dateOfBirth\"></app-data-group>\n          <div class=\"box-skills\" *ngIf=\"resume.skills\">\n              <h3>Qualificações</h3>\n              <app-data-group *ngFor=\"let skill of resume.skills\" [title]=\"skill.type\" [dataWords]=\"skill.skills\"></app-data-group>\n          </div>\n        </div>\n        <div class=\"main-content\">\n          <div class=\"row\" *ngIf=\"resume.aboutMe\">\n            <h3 class=\"sub-title\">Sobre mim</h3>\n            <p>{{resume.aboutMe}}</p>\n          </div>\n          <div class=\"row\" *ngIf=\"resume.professionalGoals\">\n            <h3 class=\"sub-title\">Objetivo Profissional</h3>\n            <p>{{resume.professionalGoals}}</p>\n          </div>\n          <div class=\"row-flex\">\n            <div class=\"col\">\n                <h3 class=\"sub-title\" *ngIf=\"resume.academicQualifications\">Formação Acadêmica</h3>\n                <app-course-group  *ngFor=\"let course of resume.academicQualifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.certifications\">Certificações atuais</h3>\n                <app-course-group  *ngFor=\"let course of resume.certifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.certifications\">Outras certificações</h3>\n                <app-course-group  *ngFor=\"let course of resume.othersCertifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\" [show]=\"course.show\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.technicalQualifications\">Formação Técnica</h3>\n                <app-course-group  *ngFor=\"let course of resume.technicalQualifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n            </div>\n            <div class=\"col\" *ngIf=\"resume.extraCourses\">\n                <h3 class=\"sub-title\">Formação Extra Curricular</h3>\n                <app-course-group  *ngFor=\"let course of resume.extraCourses\" title=\"{{course.dateConclusion}} - {{course.institution}} ({{course.workload}})\" [data]=\"course.course\" [show]=\"course.show\"></app-course-group>\n            </div>\n          </div>\n          <div class=\"row\">\n              <h3 class=\"sub-title\" *ngIf=\"resume.professionalExperience\">Experiência Profissional</h3>\n              <app-experience-group *ngFor=\"let job of resume.professionalExperience\" [dateFrom]=\"job.dateFrom\" [dateTo]=\"job.dateTo\" [title]=\"job.company\" [subTitle]=\"job.position\" [dataLines]=\"job.description\" [show]=\"job.show\"></app-experience-group>\n          </div>\n        </div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ResumeComponent } from \"./resume.component\";\nimport { CourseGroupComponent } from \"./course-group/course-group.component\";\nimport { DataGroupComponent } from \"./data-group/data-group.component\";\nimport { ExperienceGroupComponent } from \"./experience-group/experience-group.component\";\n\n@NgModule({\n    declarations: [\n        ResumeComponent,\n        CourseGroupComponent,\n        DataGroupComponent,\n        ExperienceGroupComponent\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        ResumeComponent\n    ]\n})\nexport class ResumeModule {\n\n}","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from './alert.service';\nimport { Alert } from './alert.interface';\n\n@Component({\n    selector: 'app-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n    alert: Alert\n\n    constructor(\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.alertService.listenAlert()\n        .subscribe(response => this.alert = response)\n    }\n\n    btClose() {\n        this.alert = null\n    }\n}","<app-popup *ngIf=\"alert\" (close)=\"btClose()\">\n    <div class=\"content\" [ngClass]=\"alert.type\">\n        <h1 class=\"title\">Atenção</h1>\n        <p>{{alert.message}}</p>\n    </div>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\n\nimport { AlertComponent } from './alert.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        AlertComponent\n    ],\n    imports: [\n        CommonModule,\n        PopupModule\n    ],\n    exports: [\n        AlertComponent\n    ]\n})\nexport class AlertModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject, Observable } from 'rxjs';\n\nimport { Alert } from './alert.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlertService {\n    alertSubject: Subject<Alert> = new Subject()\n\n    listenAlert(): Observable<Alert> {\n        return this.alertSubject.asObservable()\n    }\n\n    msgError(message: string) {\n        this.alertSubject.next({message, type: 'error'})\n    }\n\n    msgSuccess(message: string) {\n        this.alertSubject.next({message, type: 'success'})\n    }\n}","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-box-content',\n    templateUrl: './box-content.component.html',\n    styleUrls: ['./box-content.component.scss']\n})\nexport class BoxContentComponent {}","<div class=\"box\">\n    <ng-content></ng-content>\n</div>","import { NgModule } from \"@angular/core\";\n\nimport { BoxContentComponent } from './box-content.component';\n\n@NgModule({\n    declarations: [\n        BoxContentComponent\n    ],\n    exports: [\n        BoxContentComponent\n    ]\n})\nexport class BoxContentModule {}","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {}","<div class=\"content\">\n    <p>Desenvolvido por</p>\n    <p>danielvazmartins@gmail.com</p>\n</div>","import { NgModule } from \"@angular/core\";\n\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    declarations: [\n        FooterComponent\n    ],\n    exports: [\n        FooterComponent\n    ]\n})\nexport class FooterModule {}","import { NgModule } from \"@angular/core\";\n\nimport { InputFieldModule } from './input-field/input-field.module';\nimport { SelectModule } from './select/select.module';\nimport { TextareaFieldModule } from './textarea-field/textarea-field.module';\n\n@NgModule({\n    imports: [\n        InputFieldModule,\n        SelectModule\n    ],\n    exports: [\n        InputFieldModule,\n        SelectModule,\n        TextareaFieldModule\n    ]\n})\nexport class FormModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-field',\n    templateUrl: './input-field.component.html',\n    styleUrls: ['./input-field.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputFieldComponent), multi: true\n    }]\n})\nexport class InputFieldComponent implements ControlValueAccessor {\n    @Input() label: string\n    @Input() placeholder: string = ''\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label for=\"name\">{{label}}</label>\n    <input type=\"text\" [ngModel]=\"value\" [placeholder]=\"placeholder\" (change)=\"onChange($event.target.value)\">\n</div>","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\nimport { InputFieldComponent } from './input-field.component';\n\n@NgModule({\n    declarations: [\n        InputFieldComponent\n    ],\n    imports: [\n        FormsModule\n    ],\n    exports: [\n        InputFieldComponent\n    ]\n})\nexport class InputFieldModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { SelectOption } from 'src/app/shared/interfaces/select-option.interface';\n\n@Component({\n    selector: 'app-select',\n    templateUrl: './select.component.html',\n    styleUrls: ['./select.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n    }]\n})\nexport class SelectComponent implements ControlValueAccessor {\n    @Input() label: string\n    @Input() options: SelectOption[]\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label>{{label}}</label>\n    <div class=\"select-wrapper\">\n        <select [ngModel]=\"value\" (change)=\"onChange($event.target.value)\">\n            <option *ngFor=\"let option of options\" [value]=\"option.key\">{{option.value}}</option>\n        </select>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { SelectComponent } from './select.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    exports: [\n        SelectComponent\n    ]\n})\nexport class SelectModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'app-textarea-field',\n    templateUrl: './textarea-field.component.html',\n    styleUrls: ['./textarea-field.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaFieldComponent), multi: true\n    }]\n})\nexport class TextareaFieldComponent implements ControlValueAccessor{\n    @Input() label: string\n    @Input() placeholder: string = ''\n    @Input() rows: number\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label>{{label}}</label>\n    <textarea [ngModel]=\"value\" [placeholder]=\"placeholder\" [rows]=\"rows\" (change)=\"onChange($event.target.value)\"></textarea>\n</div>","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\nimport { TextareaFieldComponent } from './textarea-field.component';\n\n@NgModule({\n    declarations: [\n        TextareaFieldComponent\n    ],\n    imports: [\n        FormsModule\n    ],\n    exports: [\n        TextareaFieldComponent\n    ]\n})\nexport class TextareaFieldModule {}","import { Component } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    btLogout() {\n        this.authService.logout()\n    }\n}","<div class=\"buttons\">\n    <div class=\"bt-wrapper\" routerLink=\"/panel/profile\" routerLinkActive=\"active\">\n        <div class=\"bt-circle profile\"></div>\n        <span></span>\n    </div>\n    <div class=\"bt-wrapper\" routerLink=\"/panel/resumes\" routerLinkActive=\"active\">\n        <div class=\"bt-circle resumes\"></div>\n        <span></span>\n    </div>\n</div>\n<div class=\"logo\"></div>\n<div class=\"buttons right\">\n    <div class=\"bt-wrapper\">\n        <div class=\"bt-circle logout\" (click)=\"btLogout()\"></div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n    declarations: [\n        HeaderComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        HeaderComponent\n    ]\n})\nexport class HeaderModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from './login.service';\nimport { AuthService } from '../../services/auth.service';\nimport { AlertService } from '../alert/alert.service';\nimport { error } from 'protractor';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    showWindow: boolean = false\n    formLogin: FormGroup\n\n    constructor(\n        private loginService: LoginService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private route: Router,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.loginService.listenState()\n        .subscribe(state => this.showWindow = state)\n\n        this.initForm()\n    }\n\n    initForm() {\n        this.formLogin = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required]\n        })\n    }\n\n    btClose() {\n        this.showWindow = false\n    }\n\n    btLogin() {\n        if (this.formLogin.valid) {\n            const { email, password } = this.formLogin.value\n            this.authService.login(email, password)\n            .subscribe(response => {\n                this.showWindow = false\n                this.route.navigateByUrl('/panel')\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 401) return this.alertService.msgError('Usuário ou senha inválidos!')\n\n                this.alertService.msgError('Ocorreu um erro, tente novamente!')\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<app-popup *ngIf=\"showWindow\" (close)=\"btClose()\">\n    <h1 class=\"title\">Bem Vindo</h1>\n    <p>Se já possui cadastro, entre e gerencie seus currículos</p>\n    <form [formGroup]=\"formLogin\">\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n        <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        <button class=\"bt primary\" (click)=\"btLogin()\">Entrar</button>\n    </form>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        LoginComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        PopupModule\n    ],\n    exports: [\n        LoginComponent\n    ]\n})\nexport class LoginModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n    loginSubject: Subject<boolean> = new Subject()\n\n    listenState(): Observable<boolean> {\n        return this.loginSubject.asObservable()\n    }\n\n    showLogin() {\n        this.loginSubject.next(true)\n    }\n}","import { Component, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'app-popup',\n    templateUrl: './popup.component.html',\n    styleUrls: ['./popup.component.scss']\n})\nexport class PopupComponent {\n    @Output() close: EventEmitter<void> = new EventEmitter()\n\n    btClose() {\n        this.close.emit()\n    }\n}","<div class=\"popup\">\n    <div class=\"background\">\n        <div class=\"box\">\n            <div class=\"bt-close\" (click)=\"btClose()\"></div>\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { PopupComponent } from './popup.component';\n\n@NgModule({\n    declarations: [\n        PopupComponent\n    ],\n    exports: [\n        PopupComponent\n    ]\n})\nexport class PopupModule{}","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { RegisterService } from './register.service';\nimport { UsersService } from '../../services/users.service';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    showWindow: boolean = false\n    formRegister: FormGroup\n\n    constructor(\n        private registerService: RegisterService,\n        private formBuilder: FormBuilder,\n        private usersService: UsersService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.registerService.listenState()\n        .subscribe(state => this.showWindow = state)\n\n        this.initForm()\n    }\n\n    initForm() {\n        this.formRegister = this.formBuilder.group({\n            fullName: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        })\n    }\n\n    btClose() {\n        this.showWindow = false\n    }\n\n    btRegister() {\n        if (this.formRegister.valid) {\n            const { fullName, email, password } = this.formRegister.value\n\n            this.usersService.create(fullName, email, password)\n            .subscribe(response => {\n                if (response.status === 'success') {\n                    this.alertService.msgSuccess('Cadastro efetuado com sucesso!')\n                    this.showWindow = false\n                }\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 400) {\n                    const errorMessage: string = <string>Object.values(error.error.message[0].constraints)[0]\n                    this.alertService.msgError(errorMessage)\n                } else if (error.status === 403) {\n                    this.alertService.msgError(error.error.message)\n                } else {\n                    this.alertService.msgError('Ocorreu um erro, tente novamente!')\n                }\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<app-popup *ngIf=\"showWindow\" (close)=\"btClose()\">\n    <h1 class=\"title\">Bem Vindo</h1>\n    <p>Faca seu cadastro, é totalmente gratuito</p>\n    <form [formGroup]=\"formRegister\">\n        <input type=\"text\" name=\"fullName\" id=\"fullName\" placeholder=\"Nome Completo\" formControlName=\"fullName\">\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n        <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirme sua senha\" formControlName=\"confirmPassword\" autocomplete=\"off\">\n        <button class=\"bt primary\" (click)=\"btRegister()\">Cadastrar</button>\n    </form>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RegisterComponent } from './register.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        RegisterComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        PopupModule\n    ],\n    exports: [\n        RegisterComponent\n    ]\n})\nexport class RegisterModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegisterService {\n    registerSubject: Subject<boolean> = new Subject()\n\n    listenState() {\n        return this.registerSubject.asObservable()\n    }\n\n    showWindow() {\n        this.registerSubject.next(true)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authService: AuthService\n    ) {}\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // Se estiver logado então intercepta as conexões para adicionar o token no cabeçalho\n        if ( this.authService.isLogged() ) {\n            const token = this.authService.getToken()\n            \n            req = req.clone({\n                setHeaders: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n        }\n        return next.handle(req)\n    }\n    \n}","export const resumesMock = {\n    resumes: [\n        {\n            name: 'Daniel Vaz Villalobos Martins',\n            foto: '/assets/foto-perfil.jpg',\n            occupation: 'Full Stack Sênior | NodeJs | Java | AngularJS | DevOps',\n            dateOfBirth: '17/08/1983',\n            address: [\n                'Av. Vila Ema, 3793 ap 103C',\n                'Cep 03281-001 - São Paulo-SP'\n            ],\n            mobile: '(11) 96450-0218',\n            email: 'danielvazmartins@gmail.com',\n            linkedIn: 'linkedin.com/in/danielvazmartins',\n            github: 'github.com/danielvazmartins',\n            skills: [{\n                type: 'Back-end',\n                skills: ['NodeJs (Express, NestJs)', 'Java']\n            }, {\n                type: 'Front-end',\n                skills: ['Angular', 'JavaScript', 'TypeScript', 'PWA', 'Bootstrap', 'Material Design', 'CSS', 'SASS']\n            }, {\n                type: 'Database',\n                skills: ['Mysql', 'MongoDB', 'Elasticsearch', 'Sql Server', 'Postgree']\n            }, {\n                type: 'Mobile',\n                skills: ['Android com Java', 'iOS com Objective-C']\n            }, {\n                type: 'Infraestrutura',\n                skills: ['Administração de servidores Windows e Linux', 'Docker', 'Kubernets', 'Cloud (AWS e Azure), DevOps (Git, Jenkins, etc)']\n            }, {\n                type: 'Design',\n                skills: ['Photoshop', 'Illustrator', 'Adobe XD']\n            }, {\n                type: 'Idiomas',\n                skills: ['Inglês Técnico Avançado']\n            }\n            ],\n            aboutMe: 'Atuo na área de TI desde 2003, formado em Ciências da Computação e pós graduado em Gerenciamento de Projetos, além de ter algumas certificações estou sempre estudando através de plataformas como Alura, SchoolOfNet, Udemy, etc. Durante minha carreira participei de diversos projetos, utilizando tecnologias diferentes, sempre com o foco em desenvolvimento mas atuando também na parte de infra estrutura e DevOps, adquirindo um grande conhecimento de toda área de TI.',\n            professionalGoals: 'Atuar na área de desenvolvimento, seja como full-stack, back-end (NodeJs e Java), front-end (Angular), ou até mesmo com desenvolvimentos de Apps Nativos ou DevOps. Sempre me atualizando e pondo em prática os conhecimentos adquiridos. ',\n            academicQualifications: [{\n                dateConclusion: '2017',\n                institution: 'Universidade Metodista de São Paulo',\n                course: 'Pós Graduação em Gerenciamento de Projetos de TI com práticas alinhadas ao PMI'\n            },\n            {\n                dateConclusion: '2005',\n                institution: 'UniFEI  -  Centro Universitário da FEI',\n                course: 'Bacharel em Ciências da Computação'\n            }\n            ],\n            certifications: [\n                {\n                    dateConclusion: '08/2023',\n                    institution: 'Microsoft',\n                    course: 'AZ-204 Azure Developer Associate'\n                }, {\n                    dateConclusion: '11/2021',\n                    institution: 'Microsoft',\n                    course: 'AZ-900 Azure Fundamentals'\n                }\n            ],\n            othersCertifications: [\n                {\n                    dateConclusion: '04/2013',\n                    institution: 'VTEX',\n                    course: 'VTEX Interface Developer Certified (VID)',\n                    show: false\n                }, {\n                    dateConclusion: '08/2011',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Microsoft Exchange Server 2010, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '12/2010',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Windows 7, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '11/2010',\n                    institution: 'BlackBerry',\n                    course: 'BlackBerry Certified Server Support Specialist (v5.0)',\n                    show: false\n                }, {\n                    dateConclusion: '10/2010',\n                    institution: 'BlackBerry',\n                    course: 'BlackBerry Certified Support Specialist (v5.0)',\n                    show: false\n                }, {\n                    dateConclusion: '04/2010',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Microsoft Windows SharePoint Services 3.0, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '11/2009',\n                    institution: 'Microsoft',\n                    course: 'MCSA - Microsoft Windows Server 2003 Network Infrastructure',\n                    show: true\n                }, {\n                    dateConclusion: '05/2009',\n                    institution: 'Microsoft',\n                    course: 'MCSA - Microsoft Windows Server 2003 Environment',\n                    show: true\n                }, {\n                    dateConclusion: '08/2008',\n                    institution: 'Cisco',\n                    course: 'Cisco Certified Network Associate - Cisco ID# CSCO10955792',\n                    show: true\n                }\n            ],\n            extraCourses: [{\n                dateConclusion: '09/2020',\n                institution: 'IGTI (XP Educação)',\n                workload: '148h / 2 meses',\n                course: 'Bootcamp Desenvolvedor Mobile Apps (Android, React Native, Flutter)',\n                show: true\n            }, {\n                dateConclusion: '07/2020',\n                institution: 'IGTI (XP Educação)',\n                workload: '148h / 2 meses',\n                course: 'Bootcamp FullStack Developer (NodeJs, React)',\n                show: true\n            }, {\n                dateConclusion: '01/2015',\n                institution: 'Saga',\n                workload: '408 horas / 2 anos',\n                course: 'Computação Gráfica (Photoshop, Illustrator, Dreamweaver, Flash, Premiere, AfterEffects, Maya, etc)',\n                show: true\n            }, {\n                dateConclusion: '05/2014',\n                institution: 'Clarify Treinamentos',\n                workload: '24 horas',\n                course: 'Microsoft Project 2013 - Gerenciamento de Projetos',\n                show: false\n            }, {\n                dateConclusion: '01/2011',\n                institution: 'CNA',\n                workload: '2 módulos',\n                course: 'Inglês - Advanced Conversation Course',\n                show: true\n            }, {\n                dateConclusion: '07/2010',\n                institution: 'Brás & Figueiredo',\n                workload: '20 horas',\n                course: '2824 – Implementing Microsoft Internet Security and Acceleration Server 2004',\n                show: false\n            }, {\n                dateConclusion: '03/2010',\n                institution: 'Brás & Figueiredo',\n                workload: '20 horas',\n                course: '6292 – Installing and Configuring Windows 7 Client',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2277 – Implementing, Managing, and Maintaining a MS Win 2003 Network Infrastructure: Network Services',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '16 horas',\n                course: '2276 – Implementing a Microsoft Windows Server 2003 Network Insfrastructure : Network Hosts',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'CNA',\n                workload: '9 módulos',\n                course: 'Inglês - Basic, Intermediate, Advanced and High Advanced',\n                show: true\n            }, {\n                dateConclusion: '10/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '24 horas',\n                course: '2275 – Maintaining a Microsoft Windows Server 2003 Enviroment',\n                show: false\n            }, {\n                dateConclusion: '09/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2274 – Managing a Microsoft Windows Server 2003 Environment',\n                show: false\n            }, {\n                dateConclusion: '08/2007',\n                institution: 'Green Treinamento',\n                workload: '8 horas',\n                course: 'Introdução a Firewall – Linux',\n                show: true\n            }, {\n                dateConclusion: '08/2007',\n                institution: 'Green Treinamento',\n                workload: '40 horas',\n                course: 'LPI 102 – Administração de Redes Linux',\n                show: true\n            }, {\n                dateConclusion: '07/2007',\n                institution: 'Green Treinamento',\n                workload: '40 horas',\n                course: 'LPI 101 – Administração de Sistemas Linux',\n                show: true\n            }, {\n                dateConclusion: '09/2006',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2400 – Implementing and Managing Microsoft Exchange Server 2003',\n                show: false\n            }\n            ],\n            professionalExperience: [\n                {\n                    dateFrom: '19/04/2021',\n                    dateTo: '21/09/2023',\n                    company: 'F1RST Digital Services (Santander)',\n                    position: 'Analista de Desenvolvimento de Sistemas Sênior',\n                    description: [\n                        'Desenvolvimento de sistemas FullStack utilizando NodeJs (Express e NestJs), Java, Angular, MongoDB, ElastichSearch e desenvolvimento de DevOps no Jenkins (Groovy) fazendo intregação com Openshift, Azure e AWS',\n                        'Utilizando boas práticas de projeto, testes unitários (TDD) e seguindo padrão de projeto Agile (Scrum) e Jira',\n                        'Utilização de ferramentas durante o desenvolvimento até o deploy como Git, Jenkins, Docker, Kubernets, Openshift, Sonar, Fortify, etc'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '14/08/2018',\n                    dateTo: '16/04/2021',\n                    company: 'MJV Technology & Innovation (Santander)',\n                    position: 'Analista Full Stack',\n                    description: [\n                        'Desenvolvimento de sistemas FullStack utilizando NodeJs (Express e NestJs), Angular, MongoDB e ElastichSearch.',\n                        'Utilizando boas práticas de projeto, testes unitários (TDD) e seguindo padrão de projeto Agile (Scrum) e Jira',\n                        'Utilização de ferramentas durante o desenvolvimento até o deploy como Git, Jenkins, Docker, Kubernets, Openshift, Sonar, Fortify, etc'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '13/04/2009',\n                    dateTo: '27/07/2018',\n                    company: 'Viewit Comércio e Técnologia LTDA',\n                    position: 'Analista de TI Pleno',\n                    description: [\n                        '<b>Até 2018 -</b> Desenvolvimento de novos projetos em NodeJs com Angular6, manutenção dos projetos existentes em Java ou Nativos. Gerenciamento dos servidores na Amazon AWS',\n                        '<b>Até 2013 -</b> Desenvolvimento de aplicativos para Android (Java), Iphone (Objective-C), Web Mobile (HTML, CSS, JQuery). Desenvolvimento do site da empresa (PHP, XHTML). Plataformas de comércio eletrônico (VTEX e Magento). Aplicativos na AppStore (Onofre, John John Denim, Lelis Blanc, By Tennis), no Google Play (Onofre)',\n                        '<b>Até 2011 -</b> Instalação e gerenciamento de infraestrutura para provedor (Hosting de Exchange 2007 e 2010, Zimbra, Postfix, BES, Web com Plesk, Sharepoint, DNS, VMWare, etc). Desenvolvimento de painel de controle do provedor (PHP), webservices de integração (C#), MTA para gerenciamento de e-mail e anti-span (JAVA)'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '29/03/2004',\n                    dateTo: '26/03/2009',\n                    company: 'Ventiladores Bernauer S.A.',\n                    position: 'Analista de Sistemas e Administrador de Redes',\n                    description: [\n                        'Desenvolvimento de sistemas para uso interno em diversas áreas (PCP, Vendas, Engenharia, Almoxarifado, etc), integração com sistemas de terceiros (ERP - RM), levantamento das necessidades dos usuários, modelagem de dados. Principais ferramentas: Delphi 7, Sql Server 2000, Postgre, DBF, Rave Report, FastCube, etc.',\n                        'Implantação, manutenção e gerenciamento dos servidores (SBS 2003 com Exchange 2003, SQL Server 2000, WSUS, NTBackup. Windows 2003 com Terminal Service. Slackware como servidor de arquivos com SAMBA integrado com o AD do SBS 2003. Slackware como firewall utilizando IPTABLES, SQUID, SARG, OPENVPN). RAID em linux e Windows.'\n                    ],\n                    show: true\n                },\n                {\n                    dateFrom: '18/08/2003',\n                    dateTo: '31/12/2003',\n                    company: 'Home Doctor',\n                    position: 'Suporte Técnico (Estagiário)',\n                    description: ['Suporte interno aos usuários, instalação e configuração de computadores com Windows NT, 2000 e XP, configuração de rede, acessos e restrições de usuários, rotinas de backup, etc.'],\n                    show: false\n                },\n                {\n                    dateFrom: '17/06/2003',\n                    dateTo: '30/07/2003',\n                    company: 'Bohm Interal',\n                    position: 'Analista Programador (Estagiário)',\n                    description: ['Desenvolvimento de programa de CRM na linguagem Delphi, com banco de dados Oracle, utilizando SQL e PL/SQL. '],\n                    show: false\n                }\n            ]\n        }\n    ]\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    constructor(\n        private http: HttpClient,\n        private router: Router\n    ) {}\n\n    login(email: string, password: string) {\n        const params = new HttpParams()\n        .set('username', email)\n        .set('password', password)\n\n        return this.http.post('/api/auth/login', params, {observe: 'response'})\n        .pipe(\n            map((response: HttpResponse<any>) => {\n                const token = response.headers.get('x-access-token')\n                localStorage.setItem('access-token', token)\n            })\n        )\n    }\n\n    logout() {\n        localStorage.removeItem('access-token')\n        this.router.navigateByUrl('/home')\n    }\n\n    isLogged(): boolean {\n        return !!this.getToken()\n    }\n\n    getToken():string {\n        return localStorage.getItem('access-token')\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { resumesMock } from \"../mocks/resumes.mock\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResumeService {\n    constructor(\n        private http: HttpClient\n    ) {}\n    \n    getResumeId(hostname: string): number {\n        if ( hostname.endsWith('danielvazmartins.com.br') ) return 0\n        if ( hostname.endsWith('rozanaaquino.com.br') ) return 1\n        return 0\n    }\n\n    getStyleName(hostname: string): string {\n        if ( hostname.endsWith('danielvazmartins.com.br') ) return 'brow'\n        if ( hostname.endsWith('rozanaaquino.com.br') ) return 'gray'\n        return 'brow'\n    }\n\n    // Retornar currículo de mock (para desenvolvimento sem o banco de dados)\n    getResume(id: number) {\n        return resumesMock.resumes[id]\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Resume } from '../interfaces/resume.interface';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResumesService {\n    resourceUrl = '/api/resumes'\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService\n    ) {}\n\n    // Retorna a lista de curriculos do usuario logado no Painel\n    getAll(): Observable<any> {\n        return this.http.get(this.resourceUrl)\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            }),\n            catchError((error: HttpErrorResponse) => {\n                if (error.status === 401) this.authService.logout()\n                return of()\n            })\n        )\n    }\n\n    getOne(resumeId: string): Observable<any> {\n        return this.http.get(`${this.resourceUrl}/${resumeId}`)\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            })\n        )\n    }\n\n    getByHost(domain: string): Observable<any> {\n        return this.http.get(`${this.resourceUrl}/public`, { params: { domain } })\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            })\n        )\n    }\n\n    // Cadastra um novo currículo\n    create(resume: Resume): Observable<any> {\n        return this.http.post(this.resourceUrl, resume)\n    }\n\n    // Atualiza um currículo\n    update(resumeId: string, resume: Resume): Observable<any> {\n        return this.http.put(`${this.resourceUrl}/${resumeId}`, resume)\n    }\n\n    // Remove um currículo\n    delete(resumeId: string): Observable<any> {\n        return this.http.delete(`${this.resourceUrl}/${resumeId}`)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService\n    ) {}\n\n    getData() {\n        return this.http.get('/api/users')\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            }),\n            catchError((error: HttpErrorResponse) => {\n                if (error.status === 401) this.authService.logout()\n                return of()\n            })\n        )\n    }\n\n    create(fullName: string, email: string, password: string): Observable<any> {\n        const params = new HttpParams()\n        .set('fullName', fullName)\n        .set('email', email)\n        .set('password', password)\n\n        return this.http.post('/api/users', params)\n    }\n\n    update(fullName: string, email: string): Observable<any> {\n        const params = new HttpParams()\n        .set('fullName', fullName)\n        .set('email', email)\n\n        return this.http.put('/api/users', params)\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}