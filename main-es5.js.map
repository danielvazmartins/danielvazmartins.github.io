{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/panel/panel-routing.module.ts","webpack:///src/app/panel/panel.component.ts","webpack:///src/app/panel/panel.component.html","webpack:///src/app/panel/panel.module.ts","webpack:///src/app/panel/profile/profile.component.ts","webpack:///src/app/panel/profile/profile.component.html","webpack:///src/app/panel/profile/profile.module.ts","webpack:///src/app/panel/resume-form/resume-form.component.ts","webpack:///src/app/panel/resume-form/resume-form.component.html","webpack:///src/app/panel/resume-form/resume-form.module.ts","webpack:///src/app/panel/resumes/resumes.component.ts","webpack:///src/app/panel/resumes/resumes.component.html","webpack:///src/app/panel/resumes/resumes.module.ts","webpack:///src/app/resume/course-group/course-group.component.ts","webpack:///src/app/resume/course-group/course-group.component.html","webpack:///src/app/resume/data-group/data-group.component.ts","webpack:///src/app/resume/data-group/data-group.component.html","webpack:///src/app/resume/experience-group/experience-group.component.ts","webpack:///src/app/resume/experience-group/experience-group.component.html","webpack:///src/app/resume/resume.component.ts","webpack:///src/app/resume/resume.component.html","webpack:///src/app/resume/resume.module.ts","webpack:///src/app/shared/components/alert/alert.component.ts","webpack:///src/app/shared/components/alert/alert.component.html","webpack:///src/app/shared/components/alert/alert.module.ts","webpack:///src/app/shared/components/alert/alert.service.ts","webpack:///src/app/shared/components/box-content/box-content.component.ts","webpack:///src/app/shared/components/box-content/box-content.component.html","webpack:///src/app/shared/components/box-content/box-content.module.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/footer/footer.module.ts","webpack:///src/app/shared/components/form/form.module.ts","webpack:///src/app/shared/components/form/input-field/input-field.component.ts","webpack:///src/app/shared/components/form/input-field/input-field.component.html","webpack:///src/app/shared/components/form/input-field/input-field.module.ts","webpack:///src/app/shared/components/form/select/select.component.ts","webpack:///src/app/shared/components/form/select/select.component.html","webpack:///src/app/shared/components/form/select/select.module.ts","webpack:///src/app/shared/components/form/textarea-field/textarea-field.component.ts","webpack:///src/app/shared/components/form/textarea-field/textarea-field.component.html","webpack:///src/app/shared/components/form/textarea-field/textarea-field.module.ts","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/header/header.module.ts","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/login/login.module.ts","webpack:///src/app/shared/components/login/login.service.ts","webpack:///src/app/shared/components/popup/popup.component.ts","webpack:///src/app/shared/components/popup/popup.component.html","webpack:///src/app/shared/components/popup/popup.module.ts","webpack:///src/app/shared/components/register/register.component.ts","webpack:///src/app/shared/components/register/register.component.html","webpack:///src/app/shared/components/register/register.module.ts","webpack:///src/app/shared/components/register/register.service.ts","webpack:///src/app/shared/interceptors/auth.interceptor.ts","webpack:///src/app/shared/mocks/resumes.mock.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/resume.service.ts","webpack:///src/app/shared/services/resumes.service.ts","webpack:///src/app/shared/services/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","component","loadChildren","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","AppModule","declarations","providers","bootstrap","HomeComponent","loginService","registerService","showLogin","showWindow","login","register","styleUrls","HomeModule","children","pathMatch","redirectTo","PanelRoutingModule","forChild","PanelComponent","PanelModule","provide","useClass","multi","ProfileComponent","formBuilder","alertService","usersService","initForm","loadData","formProfile","group","fullName","required","email","password","getData","subscribe","response","setValue","valid","value","update","status","msgSuccess","error","errorMessage","values","message","constraints","msgError","btSave","ProfileModule","ResumeFormComponent","location","resumesService","route","skillType","modelOptions","key","styleOptions","params","resumeId","formResume","name","description","domain","model","style","resume","occupation","dateOfBirth","mobile","mobile2","address","aboutMe","professionalGoals","skills","array","getOne","Date","dateOfBirthStr","getDate","slice","getMonth","getFullYear","skill","formSkills","get","push","skillNames","skillForm","console","log","back","substr","create","addSkillGroup","btCancel","ResumeFormModule","ResumesComponent","getResumes","resumes$","getAll","ResumesModule","CourseGroupComponent","show","DataGroupComponent","ExperienceGroupComponent","ResumeComponent","resumeService","titleService","hostname","window","snapshot","queryParams","getResume","styleName","getByHost","ResumeModule","AlertComponent","listenAlert","alert","AlertModule","AlertService","alertSubject","asObservable","next","type","providedIn","BoxContentComponent","BoxContentModule","FooterComponent","FooterModule","FormModule","InputFieldComponent","placeholder","obj","fn","onChange","useExisting","InputFieldModule","SelectComponent","SelectModule","TextareaFieldComponent","TextareaFieldModule","HeaderComponent","authService","router","logout","btLogout","HeaderModule","LoginComponent","listenState","state","formLogin","navigateByUrl","LoginModule","LoginService","loginSubject","PopupComponent","close","emit","btClose","PopupModule","RegisterComponent","formRegister","confirmPassword","RegisterModule","RegisterService","registerSubject","AuthInterceptor","isLogged","token","getToken","clone","setHeaders","handle","resumesMock","resumes","foto","linkedIn","github","academicQualifications","dateConclusion","institution","course","certifications","othersCertifications","extraCourses","workload","professionalExperience","dateFrom","dateTo","company","position","AuthService","http","set","post","observe","pipe","headers","localStorage","setItem","removeItem","getItem","ResumeService","endsWith","ResumesService","resourceUrl","put","UsersService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./panel/panel.module\": \"./src/app/panel/panel.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule } from \"@angular/router\";\n\nimport { ResumeComponent } from \"./resume/resume.component\";\nimport { HomeComponent } from \"./home/home.component\";\n\nconst routes: Route[] = [\n    { path: '', component: ResumeComponent },\n    { path: 'panel', loadChildren: './panel/panel.module#PanelModule' },\n    { path: 'home', component: HomeComponent }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    \n}\n","<router-outlet></router-outlet>\n<app-alert></app-alert>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ResumeModule } from './resume/resume.module';\nimport { HomeModule } from './home/home.module';\nimport { PanelModule } from './panel/panel.module';\nimport { AlertModule } from './shared/components/alert/alert.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ResumeModule,\n    HomeModule,\n    PanelModule,\n    AlertModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\n\nimport { LoginService } from '../shared/components/login/login.service';\nimport { RegisterService } from '../shared/components/register/register.service';\n\n@Component({\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n    constructor(\n        private loginService: LoginService,\n        private registerService: RegisterService\n    ) {}\n\n    login() {\n        this.loginService.showLogin()\n    }\n\n    register() {\n        this.registerService.showWindow()\n    }\n}","<div class=\"panel\">\n    <header>\n        <div class=\"content\">\n            <img src=\"/assets/images/banner-home-curriculos.png\" alt=\"Meus Currículos\">\n            <h1 class=\"title\">Meus Currículos</h1>\n            <p>Cadastre seu currículo e crie modelos profissionais e criativos. Tenha seu currículo online ou se preferir faça o download para impressão. Aumente suas chances no mercado de trabalho e utilize este site de forma totalmente gratuita.</p>\n        </div>\n        <button class=\"bt primary\" (click)=\"login()\">Entrar</button>\n    </header>\n    <section class=\"content\">\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-cadastro.png\" alt=\"Cadastre seus currículo\">\n            <p>Cadastre os dados do seu currículo, informações pessoais, habilidades, treinamentos e experiência professional</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-modelos.png\" alt=\"Escolha um modelo\">\n            <p>Escolha um dos modelos de layout e um estilo de cor da sua preferência</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-versoes.png\" alt=\"Crie versões\">\n            <p>Tenha mais de uma versão do seu currículo, fazendo alterações do objetivo, destacando cursos e habilidades aumentando suas chances no mercado de trabalho</p>\n        </div>\n        <div class=\"box\">\n            <img src=\"/assets/images/img-home-box-pdf.png\" alt=\"Baixe em pdf\">\n            <p>Gere PDF para ter seu currículo impresso ou compartilhe como preferir e tenha também seu currículo online para desktop e celular, sempre atualizado</p>\n        </div>\n    </section>\n    <button class=\"bt primary\" (click)=\"register()\">Cadastre-se</button>\n    <app-footer></app-footer>\n    <app-login></app-login>\n    <app-register></app-register>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeComponent } from \"./home.component\";\nimport { FooterModule } from '../shared/components/footer/footer.module';\nimport { LoginModule } from '../shared/components/login/login.module';\nimport { RegisterModule } from '../shared/components/register/register.module';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        FooterModule,\n        LoginModule,\n        RegisterModule\n    ]\n})\nexport class HomeModule {}","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ResumesComponent } from './resumes/resumes.component';\nimport { PanelComponent } from './panel.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ResumeFormComponent } from './resume-form/resume-form.component';\n\nconst routes: Routes = [\n    { path: '', component: PanelComponent, children: [\n        { path: '', pathMatch: 'full', redirectTo: 'resumes'},\n        { path: 'resumes', component: ResumesComponent },\n        { path: 'profile', component: ProfileComponent },\n        { path: 'resume-form', component: ResumeFormComponent },\n        { path: 'resume-form/:id', component: ResumeFormComponent }\n    ]}\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class PanelRoutingModule {}","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent {}","<div class=\"panel\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>","import { NgModule } from \"@angular/core\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { PanelComponent } from './panel.component';\nimport { PanelRoutingModule } from './panel-routing.module';\nimport { HeaderModule } from '../shared/components/header/header.module';\nimport { FooterModule } from '../shared/components/footer/footer.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { AuthInterceptor } from '../shared/interceptors/auth.interceptor';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { ResumeFormModule } from './resume-form/resume-form.module';\n\n@NgModule({\n    declarations: [\n        PanelComponent\n    ],\n    imports: [\n        PanelRoutingModule,\n        HeaderModule,\n        FooterModule,\n        ProfileModule,\n        ResumesModule,\n        ResumeFormModule\n    ],\n    providers: [\n        // Intercepta as conexões para adicionar o token no cabeçalho\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n    ]\n})\nexport class PanelModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { AlertService } from 'src/app/shared/components/alert/alert.service';\nimport { UsersService } from 'src/app/shared/services/users.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n    formProfile: FormGroup\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private alertService: AlertService,\n        private usersService: UsersService\n    ) {}\n\n    ngOnInit() {\n        this.initForm()\n        this.loadData()\n    }\n\n    initForm() {\n        this.formProfile = this.formBuilder.group({\n            fullName: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['********', Validators.required]\n        })\n    }\n\n    loadData() {\n        this.usersService.getData()\n        .subscribe((response: any) => {\n            const {fullName, email} = response\n            this.formProfile.setValue({fullName, email, password: '********'})\n        })\n    }\n\n    btSave() {\n        if (this.formProfile.valid) {\n            const { fullName, email, password } = this.formProfile.value\n\n            this.usersService.update(fullName, email)\n            .subscribe(response => {\n                if (response.status === 'success') {\n                    this.alertService.msgSuccess('Dados salvos com sucesso!')\n                }\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 400) {\n                    const errorMessage: string = <string>Object.values(error.error.message[0].constraints)[0]\n                    this.alertService.msgError(errorMessage)\n                } else if (error.status === 403) {\n                    this.alertService.msgError(error.error.message)\n                } else {\n                    this.alertService.msgError('Ocorreu um erro, tente novamente!')\n                }\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<section class=\"panel-content\">\n    <h1 class=\"page-title\">Meus Dados</h1>\n    <div class=\"page-box\">\n        <form [formGroup]=\"formProfile\">\n            <input type=\"text\" name=\"fullName\" id=\"fullName\" placeholder=\"Nome Completo\" formControlName=\"fullName\">\n            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        </form>\n        <div class=\"buttons\">\n            <button class=\"bt primary\" (click)=\"btSave()\">Salvar</button>\n        </div>\n        <div class=\"bg\"></div>\n    </div>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ProfileComponent } from './profile.component';\n\n@NgModule({\n    declarations: [\n        ProfileComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ]\n})\nexport class ProfileModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ResumesService } from 'src/app/shared/services/resumes.service';\nimport { SelectOption } from 'src/app/shared/interfaces/select-option.interface';\n\n@Component({\n    templateUrl: './resume-form.component.html',\n    styleUrls: ['./resume-form.component.scss']\n})\nexport class ResumeFormComponent implements OnInit {\n    formResume: FormGroup\n    resumeId: string\n    modelOptions: SelectOption[]\n    styleOptions: SelectOption[]\n    skillType: string = ''\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private location: Location,\n        private resumesService: ResumesService,\n        private route: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.modelOptions = [\n            {key: 'modern', value: 'Moderno'},\n            {key: 'classic', value: 'Classico'}\n        ]\n        this.styleOptions = [\n            {key:'gray', value:'Cinza'},\n            {key:'brown', value:'Marrom'},\n            {key:'pink', value:'Rosa'}\n        ]\n        this.route.params.subscribe(params => this.resumeId = params['id'])\n        this.initForm()\n\n        if (this.resumeId) this.loadData()\n    }\n\n    initForm() {\n        this.formResume = this.formBuilder.group({\n            name: [''],\n            description: [''],\n            domain: [''],\n            model: ['modern'],\n            style: ['brown'],\n            resume: this.formBuilder.group({\n                name: [''],\n                occupation: [''],\n                dateOfBirth: [''],\n                email: [''],\n                mobile: [''],\n                mobile2: [''],\n                address: [''],\n                aboutMe: [''],\n                professionalGoals: [''],\n                skills: this.formBuilder.array([])\n            })\n        })\n    }\n\n    loadData() {\n        this.resumesService.getOne(this.resumeId)\n        .subscribe(response => {\n            //const {_id, userId, __v, ...resume} = response\n            //this.formResume.setValue(resume)\n            const dateOfBirth = new Date(response['resume']['dateOfBirth'])\n            const dateOfBirthStr = ('0' + dateOfBirth.getDate()).slice(-2) + '/' + ('0' + (dateOfBirth.getMonth() + 1)).slice(-2) + '/' + dateOfBirth.getFullYear()\n\n            this.formResume.setValue({\n                name: response['name'],\n                description: response['description'],\n                domain: response['domain'] || '',\n                model: response['model'],\n                style: response['style'],\n                resume: {\n                    name: response['resume']['name'],\n                    occupation: response['resume']['occupation'],\n                    dateOfBirth: response['resume']['dateOfBirth'],\n                    email: response['resume']['email'] || '',\n                    mobile: response['resume']['mobile'] || '',\n                    mobile2: response['resume']['mobile2'] || '',\n                    address: response['resume']['address'] || '',\n                    aboutMe: response['resume']['aboutMe'],\n                    professionalGoals: response['resume']['professionalGoals'],\n                    skills: []\n                }\n            })\n            for (let skill of response['resume']['skills']) {\n                this.skillType = skill['skillType']\n                //this.addSkillType()\n            }\n        })\n    }\n\n    addSkillGroup() {\n        const formSkills = this.formResume.get('resume.skills') as FormArray\n        formSkills.push(this.formBuilder.group({\n            skillType: [''],\n            skillNames: [[]]\n        }))\n    }\n\n    addSkill(skillForm) {\n        console.log('addSkill', skillForm)\n    }\n\n    btCancel() {\n        this.location.back()\n    }\n\n    btSave() {\n        let resume = this.formResume.value\n        const dateOfBirthStr:string = this.formResume.get('resume.dateOfBirth').value\n        console.log(dateOfBirthStr, +dateOfBirthStr)\n        console.log(this.formResume.get('resume.dateOfBirth'))\n        const dateOfBirth = new Date(+dateOfBirthStr.substr(4,4), +dateOfBirthStr.substr(2,2) -1, +dateOfBirthStr.substr(0,2))\n        console.log(dateOfBirth)\n        //resume['resume']['dateOfBirth'] = dateOfBirth \n        //return console.log(resume)\n\n        console.log(resume)\n        //return\n        if (this.resumeId) {\n            this.resumesService.update(this.resumeId, resume)\n            .subscribe(response => (response['status'] === 'success') && this.location.back())\n        } else {\n            this.resumesService.create(resume)\n            .subscribe(response => (response['status'] === 'success') && this.location.back())\n        }\n    }\n}","<section class=\"panel-content\">\n    <h1 class=\"page-title\">Cadastro de Currículo</h1>\n    <app-box-content>\n        <form [formGroup]=\"formResume\">\n            <h3 class=\"sub-title\">Dados da Aplicação</h3>\n            <div class=\"form-line\">\n                <div class=\"form-col\">\n                    <app-input-field label=\"Nome do Currículo\" placeholder=\"Ex.: Currículo padrão\" formControlName=\"name\"></app-input-field>\n                    <app-input-field label=\"Domínio\" placeholder=\"Ex.: seumone.com.br\" formControlName=\"domain\"></app-input-field>\n                    <app-select label=\"Modelo\" [options]=\"modelOptions\" formControlName=\"model\"></app-select>\n                    <app-select label=\"Estilo\" [options]=\"styleOptions\" formControlName=\"style\"></app-select>\n                </div>\n                <div class=\"form-col\">\n                    <app-textarea-field \n                        label=\"Descrição\" \n                        formControlName=\"description\"\n                        placeholder=\"Informações sobre esta versão do currículo. Esse texto apenas ficará visível em seu painel, mas não irá aparecer dentro do currículo\">\n                    </app-textarea-field>\n                </div>\n            </div>\n            <ng-container formGroupName=\"resume\">\n                <h3 class=\"sub-title\">Informações de Contato</h3>\n                <div class=\"form-line\">\n                    <div class=\"form-col\">\n                        <app-input-field label=\"Nome Completo\" formControlName=\"name\"></app-input-field>\n                        <div class=\"form-line\">\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Ocupação / Cargo\" formControlName=\"occupation\"></app-input-field>\n                            </div>\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Data de Nascimento\" formControlName=\"dateOfBirth\" placeHoder=\"Digite no formato dd/mm/aaaa\"></app-input-field>\n                            </div>\n                        </div>\n                        <app-input-field label=\"E-mail\" formControlName=\"email\"></app-input-field>\n                        <div class=\"form-line\">\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Telefone\" formControlName=\"mobile\"></app-input-field>\n                            </div>\n                            <div class=\"form-col\">\n                                <app-input-field label=\"Telefone 2\"></app-input-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-col photo\">\n                        <div class=\"photo\"></div>\n                    </div>\n                </div>\n                <app-input-field label=\"Endereço\"></app-input-field>\n                <h3 class=\"sub-title\">Apresentação</h3>\n                <div class=\"form-line\">\n                    <div class=\"form-col\">\n                        <app-textarea-field \n                            label=\"Sobre mim\" \n                            formControlName=\"aboutMe\"\n                            placeholder=\"Escreva um pouco sobre você, sua experiência profissional e ou acadêmica, seus hobbies e o que mais quiser apresentar no seu currículo, essa é sua apresentação no currículo e muito importante\"\n                            rows=10>\n                        </app-textarea-field>\n                        <app-textarea-field \n                            label=\"Objetivo Profissional\" \n                            formControlName=\"professionalGoals\"\n                            placeholder=\"Fale sobre o seu objetivo atual, o que está procurando e seus planos para o futuro\"\n                            rows=10>\n                        </app-textarea-field>\n                    </div>\n                </div>\n                <div class=\"sub-title-plus\">\n                    <span>Qualificações</span>\n                    <div class=\"bt-add-box\" (click)=\"addSkillGroup()\"></div>\n                </div>\n                <div class=\"box-group\" *ngFor=\"let skillForm of formResume.get('resume.skills')['controls']\" [formGroup]=\"skillForm\">\n                    <div class=\"form-line\">\n                        <div class=\"form-col\">\n                            <app-input-field label=\"Tipo de Qualificação\" formControlName=\"skillType\"></app-input-field>\n                        </div>\n                        <div class=\"form-col\">\n                            <div class=\"form-line\">\n                                <app-input-field label=\"Habilidade / Ferramenta\" #skill></app-input-field>\n                                <div class=\"bt-add-item\" (click)=\"addSkill(skill)\"></div>\n                                <div class=\"bt-remove-box\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <ng-container *ngFor=\"let skillGroup of formResume.get('resume.skills')['controls']\">\n                    <div [formGroup]=\"skillGroup\">\n                        <input type=\"text\" formControlName=\"skillType\">\n                        <span>Type: {{skillGroup.get('skillType').value}}</span>\n                        <p *ngFor=\"let tool of skillGroup.get('tools').value\">{{tool}}</p>\n                    </div>\n                </ng-container> -->\n            </ng-container>\n        </form>\n        <div class=\"buttons\">\n            <button class=\"bt secondary\" (click)=\"btCancel()\">Cancelar</button>\n            <button class=\"bt primary\" (click)=\"btSave()\">Salvar</button>\n        </div>\n    </app-box-content>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { ResumeFormComponent } from './resume-form.component';\nimport { BoxContentModule } from 'src/app/shared/components/box-content/box-content.module';\nimport { SelectModule } from 'src/app/shared/components/form/select/select.module';\nimport { FormModule } from 'src/app/shared/components/form/form.module';\n\n@NgModule({\n    declarations: [\n        ResumeFormComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        BoxContentModule,\n        SelectModule,\n        FormModule,\n        NgxMaskModule.forRoot(),\n        FormsModule\n    ],\n    exports: [\n        ResumeFormComponent\n    ]\n})\nexport class ResumeFormModule {}","import { Component, OnInit } from \"@angular/core\";\n\nimport { ResumesService } from 'src/app/shared/services/resumes.service';\n\n@Component({\n    templateUrl: './resumes.component.html',\n    styleUrls: ['./resumes.component.scss']\n})\nexport class ResumesComponent implements OnInit {\n\n    resumes$: any\n\n    constructor(\n        private resumesService: ResumesService\n    ) {}\n\n    ngOnInit() {\n        this.getResumes()\n    }\n\n    getResumes() {\n        this.resumes$ =this.resumesService.getAll()\n    }\n\n    btDelete(resumeId: string) {\n        this.resumesService.delete(resumeId)\n        .subscribe(response => this.getResumes())\n    }\n}","<section class=\"panel-content\">\n    <div class=\"header\">\n        <h1 class=\"page-title\">Meus Currículos</h1>\n        <div class=\"bt primary\" routerLink=\"/panel/resume-form\">Criar Novo</div>\n    </div>\n    <ng-container *ngIf=\"resumes$ | async as resumes\">\n        <div class=\"page-box\" *ngFor=\"let resume of resumes\">\n            <div class=\"field\">\n                <label>Nome do Currículo</label>\n                <span>{{resume.name}}</span>\n            </div>\n            <div class=\"field\">\n                <label>Descrição</label>\n                <span>{{resume.description}}</span>\n            </div>\n            <div class=\"field\" *ngIf=\"resume.domain\">\n                <label>Domínio</label>\n                <span>{{resume.domain}}</span>\n            </div>\n            <button class=\"bt-icon share\"></button>\n            <button class=\"bt-icon preview\"></button>\n            <div class=\"buttons\">\n                <button class=\"bt secondary\" [routerLink]=\"['/panel/resume-form',resume._id]\">Editar</button>\n                <button class=\"bt primary\" (click)=\"btDelete(resume._id)\">Excluir</button>\n            </div>\n        </div>\n    </ng-container>\n</section>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ResumesComponent } from './resumes.component';\nimport { BoxContentModule } from 'src/app/shared/components/box-content/box-content.module';\n\n@NgModule({\n    declarations: [\n        ResumesComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        BoxContentModule\n    ]\n})\nexport class ResumesModule {}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-course-group',\n  templateUrl: './course-group.component.html',\n  styleUrls: ['./course-group.component.scss']\n})\nexport class CourseGroupComponent implements OnInit {\n\n  @Input() title: string\n  @Input() data: string\n  @Input() show: boolean = true\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","<ng-container *ngIf=\"show\">\n    <label>{{title}}</label>\n    <span>{{data}}</span>\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-data-group',\n  templateUrl: './data-group.component.html',\n  styleUrls: ['./data-group.component.scss']\n})\nexport class DataGroupComponent implements OnInit {\n\n  @Input() title: string\n  @Input() data: string\n  @Input() dataLines: string[]\n  @Input() dataWords: string[]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<label>{{title}}</label>\n<span>{{data}}</span>\n<span *ngFor=\"let line of dataLines\">{{line}}</span>\n<span>\n  <ng-container *ngFor=\"let word of dataWords; last as last\">{{word}}<ng-container *ngIf=\"!last\">, </ng-container></ng-container>\n</span>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-experience-group',\n  templateUrl: './experience-group.component.html',\n  styleUrls: ['./experience-group.component.scss']\n})\nexport class ExperienceGroupComponent implements OnInit {\n\n  @Input() dateFrom: string\n  @Input() dateTo: string\n  @Input() title: string\n  @Input() subTitle: string\n  @Input() data: string\n  @Input() dataLines: string[]\n  @Input() show: boolean = true\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","<div class=\"row-flex\" *ngIf=\"show === true\">\n  <div class=\"col left\">\n    <span>{{dateFrom}}</span>\n    <ng-container *ngIf=\"dateTo\">\n      <span>até</span>\n      <span>{{dateTo}}</span>\n    </ng-container>\n  </div>\n  <div class=\"col right\">\n      <label class=\"title\">{{title}}</label>\n      <label class=\"sub-title\">{{subTitle}}</label>\n      <span [innerHTML]=\"data\"></span>\n      <span *ngFor=\"let line of dataLines\" [innerHTML]=\"line\"></span>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\n\nimport { ResumeService } from \"../shared/services/resume.service\";\nimport { ResumesService } from '../shared/services/resumes.service';\n\n@Component({\n    selector: 'app-resume',\n    templateUrl: './resume.component.html',\n    styleUrls: [\n        './resume.component.scss',\n        './styles/brown-style.scss',\n        './styles/pink-style.scss',\n        './styles/gray-style.scss'\n    ]\n})\nexport class ResumeComponent implements OnInit {\n    resume: any\n    styleName: string\n\n    constructor(\n        private resumeService: ResumeService,\n        private resumesService: ResumesService,\n        private route: ActivatedRoute,\n        private titleService: Title\n    ) {}\n\n    ngOnInit() {\n        const hostname = window.location.hostname\n        const resumeId = this.route.snapshot.queryParams.resumeId\n\n        console.log(this.route.snapshot.queryParams)\n        if (hostname === 'localhost' && !resumeId ) {\n            // Carrega os dados do currículo (utilizando mock local, sem banco de dados)\n            this.resume = this.resumeService.getResume(0)\n            this.styleName = 'brow'\n        } else {\n            this.resumesService.getByHost('danielvazmartins.com.br')\n        .subscribe(response => {\n            console.log(response)\n            this.resume = response['resume']\n        })\n        }\n\n        // Pega os parâmetro da URL\n        //const resumeId = this.route.snapshot.queryParams.resumeId || this.resumeService.getResumeId(hostname)\n        //this.styleName = this.route.snapshot.queryParams.style || this.resumeService.getStyleName(hostname)\n\n\n        // Altera o title do navegador\n        //this.titleService.setTitle(this.resume.name)\n\n        \n    }\n}","<div class=\"style\" [ngClass]=\"styleName\" *ngIf=\"resume\">\n    <div class=\"header\">\n      <h1>{{resume.name}}</h1>\n      <p>{{resume.occupation}}</p>\n    </div>\n    <div class=\"box-resume\">\n      <div class=\"sidebar\">\n          <div class=\"perfil-img\" *ngIf=\"resume.foto\">\n            <img [src]=\"resume.foto\">\n          </div>\n          <app-data-group *ngIf=\"resume.mobile || resume.email || resume.linkedIn || resume.github\" title=\"Contato\" [dataLines]=\"[resume.mobile, resume.mobile2, resume.email, resume.linkedIn, resume.github]\"></app-data-group>\n          <app-data-group *ngIf=\"resume.address\" title=\"Endereço\" [dataLines]=\"resume.address\"></app-data-group>\n          <app-data-group *ngIf=\"resume.dateOfBirth\" title=\"Data de nascimento\" [data]=\"resume.dateOfBirth\"></app-data-group>\n          <div class=\"box-skills\" *ngIf=\"resume.skills\">\n              <h3>Qualificações</h3>\n              <app-data-group *ngFor=\"let skill of resume.skills\" [title]=\"skill.type\" [dataWords]=\"skill.skills\"></app-data-group>\n          </div>\n        </div>\n        <div class=\"main-content\">\n          <div class=\"row\" *ngIf=\"resume.aboutMe\">\n            <h3 class=\"sub-title\">Sobre mim</h3>\n            <p>{{resume.aboutMe}}</p>\n          </div>\n          <div class=\"row\" *ngIf=\"resume.professionalGoals\">\n            <h3 class=\"sub-title\">Objetivo Profissional</h3>\n            <p>{{resume.professionalGoals}}</p>\n          </div>\n          <div class=\"row-flex\">\n            <div class=\"col\">\n                <h3 class=\"sub-title\" *ngIf=\"resume.academicQualifications\">Formação Acadêmica</h3>\n                <app-course-group  *ngFor=\"let course of resume.academicQualifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.certifications\">Certificações atuais</h3>\n                <app-course-group  *ngFor=\"let course of resume.certifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.certifications\">Outras certificações</h3>\n                <app-course-group  *ngFor=\"let course of resume.othersCertifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\" [show]=\"course.show\"></app-course-group>\n                <h3 class=\"sub-title\" *ngIf=\"resume.technicalQualifications\">Formação Técnica</h3>\n                <app-course-group  *ngFor=\"let course of resume.technicalQualifications\" title=\"{{course.dateConclusion}} - {{course.institution}}\" [data]=\"course.course\"></app-course-group>\n            </div>\n            <div class=\"col\" *ngIf=\"resume.extraCourses\">\n                <h3 class=\"sub-title\">Formação Extra Curricular</h3>\n                <app-course-group  *ngFor=\"let course of resume.extraCourses\" title=\"{{course.dateConclusion}} - {{course.institution}} ({{course.workload}})\" [data]=\"course.course\" [show]=\"course.show\"></app-course-group>\n            </div>\n          </div>\n          <div class=\"row\">\n              <h3 class=\"sub-title\" *ngIf=\"resume.professionalExperience\">Experiência Profissional</h3>\n              <app-experience-group *ngFor=\"let job of resume.professionalExperience\" [dateFrom]=\"job.dateFrom\" [dateTo]=\"job.dateTo\" [title]=\"job.company\" [subTitle]=\"job.position\" [dataLines]=\"job.description\" [show]=\"job.show\"></app-experience-group>\n          </div>\n        </div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ResumeComponent } from \"./resume.component\";\nimport { CourseGroupComponent } from \"./course-group/course-group.component\";\nimport { DataGroupComponent } from \"./data-group/data-group.component\";\nimport { ExperienceGroupComponent } from \"./experience-group/experience-group.component\";\n\n@NgModule({\n    declarations: [\n        ResumeComponent,\n        CourseGroupComponent,\n        DataGroupComponent,\n        ExperienceGroupComponent\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        ResumeComponent\n    ]\n})\nexport class ResumeModule {\n\n}","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from './alert.service';\nimport { Alert } from './alert.interface';\n\n@Component({\n    selector: 'app-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n    alert: Alert\n\n    constructor(\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.alertService.listenAlert()\n        .subscribe(response => this.alert = response)\n    }\n\n    btClose() {\n        this.alert = null\n    }\n}","<app-popup *ngIf=\"alert\" (close)=\"btClose()\">\n    <div class=\"content\" [ngClass]=\"alert.type\">\n        <h1 class=\"title\">Atenção</h1>\n        <p>{{alert.message}}</p>\n    </div>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\n\nimport { AlertComponent } from './alert.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        AlertComponent\n    ],\n    imports: [\n        CommonModule,\n        PopupModule\n    ],\n    exports: [\n        AlertComponent\n    ]\n})\nexport class AlertModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject, Observable } from 'rxjs';\n\nimport { Alert } from './alert.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlertService {\n    alertSubject: Subject<Alert> = new Subject()\n\n    listenAlert(): Observable<Alert> {\n        return this.alertSubject.asObservable()\n    }\n\n    msgError(message: string) {\n        this.alertSubject.next({message, type: 'error'})\n    }\n\n    msgSuccess(message: string) {\n        this.alertSubject.next({message, type: 'success'})\n    }\n}","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-box-content',\n    templateUrl: './box-content.component.html',\n    styleUrls: ['./box-content.component.scss']\n})\nexport class BoxContentComponent {}","<div class=\"box\">\n    <ng-content></ng-content>\n</div>","import { NgModule } from \"@angular/core\";\n\nimport { BoxContentComponent } from './box-content.component';\n\n@NgModule({\n    declarations: [\n        BoxContentComponent\n    ],\n    exports: [\n        BoxContentComponent\n    ]\n})\nexport class BoxContentModule {}","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {}","<div class=\"content\">\n    <p>Desenvolvido por</p>\n    <p>danielvazmartins@gmail.com</p>\n</div>","import { NgModule } from \"@angular/core\";\n\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    declarations: [\n        FooterComponent\n    ],\n    exports: [\n        FooterComponent\n    ]\n})\nexport class FooterModule {}","import { NgModule } from \"@angular/core\";\n\nimport { InputFieldModule } from './input-field/input-field.module';\nimport { SelectModule } from './select/select.module';\nimport { TextareaFieldModule } from './textarea-field/textarea-field.module';\n\n@NgModule({\n    imports: [\n        InputFieldModule,\n        SelectModule\n    ],\n    exports: [\n        InputFieldModule,\n        SelectModule,\n        TextareaFieldModule\n    ]\n})\nexport class FormModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-field',\n    templateUrl: './input-field.component.html',\n    styleUrls: ['./input-field.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputFieldComponent), multi: true\n    }]\n})\nexport class InputFieldComponent implements ControlValueAccessor {\n    @Input() label: string\n    @Input() placeholder: string = ''\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label for=\"name\">{{label}}</label>\n    <input type=\"text\" [ngModel]=\"value\" [placeholder]=\"placeholder\" (change)=\"onChange($event.target.value)\">\n</div>","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\nimport { InputFieldComponent } from './input-field.component';\n\n@NgModule({\n    declarations: [\n        InputFieldComponent\n    ],\n    imports: [\n        FormsModule\n    ],\n    exports: [\n        InputFieldComponent\n    ]\n})\nexport class InputFieldModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { SelectOption } from 'src/app/shared/interfaces/select-option.interface';\n\n@Component({\n    selector: 'app-select',\n    templateUrl: './select.component.html',\n    styleUrls: ['./select.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n    }]\n})\nexport class SelectComponent implements ControlValueAccessor {\n    @Input() label: string\n    @Input() options: SelectOption[]\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label>{{label}}</label>\n    <div class=\"select-wrapper\">\n        <select [ngModel]=\"value\" (change)=\"onChange($event.target.value)\">\n            <option *ngFor=\"let option of options\" [value]=\"option.key\">{{option.value}}</option>\n        </select>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { SelectComponent } from './select.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    exports: [\n        SelectComponent\n    ]\n})\nexport class SelectModule {}","import { Component, Input, forwardRef } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'app-textarea-field',\n    templateUrl: './textarea-field.component.html',\n    styleUrls: ['./textarea-field.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextareaFieldComponent), multi: true\n    }]\n})\nexport class TextareaFieldComponent implements ControlValueAccessor{\n    @Input() label: string\n    @Input() placeholder: string = ''\n    @Input() rows: number\n\n    value: String\n\n    writeValue(obj: string): void {\n        this.value = obj\n    }\n    registerOnChange(fn: any): void {\n        this.onChange = fn\n    }\n    registerOnTouched(fn: any): void {}\n\n    onChange(value) {}\n}","<div class=\"form-field\">\n    <label>{{label}}</label>\n    <textarea [ngModel]=\"value\" [placeholder]=\"placeholder\" [rows]=\"rows\" (change)=\"onChange($event.target.value)\"></textarea>\n</div>","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\nimport { TextareaFieldComponent } from './textarea-field.component';\n\n@NgModule({\n    declarations: [\n        TextareaFieldComponent\n    ],\n    imports: [\n        FormsModule\n    ],\n    exports: [\n        TextareaFieldComponent\n    ]\n})\nexport class TextareaFieldModule {}","import { Component } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    btLogout() {\n        this.authService.logout()\n    }\n}","<div class=\"buttons\">\n    <div class=\"bt-wrapper\" routerLink=\"/panel/profile\" routerLinkActive=\"active\">\n        <div class=\"bt-circle profile\"></div>\n        <span></span>\n    </div>\n    <div class=\"bt-wrapper\" routerLink=\"/panel/resumes\" routerLinkActive=\"active\">\n        <div class=\"bt-circle resumes\"></div>\n        <span></span>\n    </div>\n</div>\n<div class=\"logo\"></div>\n<div class=\"buttons right\">\n    <div class=\"bt-wrapper\">\n        <div class=\"bt-circle logout\" (click)=\"btLogout()\"></div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n    declarations: [\n        HeaderComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        HeaderComponent\n    ]\n})\nexport class HeaderModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from './login.service';\nimport { AuthService } from '../../services/auth.service';\nimport { AlertService } from '../alert/alert.service';\nimport { error } from 'protractor';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    showWindow: boolean = false\n    formLogin: FormGroup\n\n    constructor(\n        private loginService: LoginService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private route: Router,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.loginService.listenState()\n        .subscribe(state => this.showWindow = state)\n\n        this.initForm()\n    }\n\n    initForm() {\n        this.formLogin = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required]\n        })\n    }\n\n    btClose() {\n        this.showWindow = false\n    }\n\n    btLogin() {\n        if (this.formLogin.valid) {\n            const { email, password } = this.formLogin.value\n            this.authService.login(email, password)\n            .subscribe(response => {\n                this.showWindow = false\n                this.route.navigateByUrl('/panel')\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 401) return this.alertService.msgError('Usuário ou senha inválidos!')\n\n                this.alertService.msgError('Ocorreu um erro, tente novamente!')\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<app-popup *ngIf=\"showWindow\" (close)=\"btClose()\">\n    <h1 class=\"title\">Bem Vindo</h1>\n    <p>Se já possui cadastro, entre e gerencie seus currículos</p>\n    <form [formGroup]=\"formLogin\">\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n        <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        <button class=\"bt primary\" (click)=\"btLogin()\">Entrar</button>\n    </form>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        LoginComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        PopupModule\n    ],\n    exports: [\n        LoginComponent\n    ]\n})\nexport class LoginModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n    loginSubject: Subject<boolean> = new Subject()\n\n    listenState(): Observable<boolean> {\n        return this.loginSubject.asObservable()\n    }\n\n    showLogin() {\n        this.loginSubject.next(true)\n    }\n}","import { Component, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'app-popup',\n    templateUrl: './popup.component.html',\n    styleUrls: ['./popup.component.scss']\n})\nexport class PopupComponent {\n    @Output() close: EventEmitter<void> = new EventEmitter()\n\n    btClose() {\n        this.close.emit()\n    }\n}","<div class=\"popup\">\n    <div class=\"background\">\n        <div class=\"box\">\n            <div class=\"bt-close\" (click)=\"btClose()\"></div>\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { PopupComponent } from './popup.component';\n\n@NgModule({\n    declarations: [\n        PopupComponent\n    ],\n    exports: [\n        PopupComponent\n    ]\n})\nexport class PopupModule{}","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { RegisterService } from './register.service';\nimport { UsersService } from '../../services/users.service';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    showWindow: boolean = false\n    formRegister: FormGroup\n\n    constructor(\n        private registerService: RegisterService,\n        private formBuilder: FormBuilder,\n        private usersService: UsersService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.registerService.listenState()\n        .subscribe(state => this.showWindow = state)\n\n        this.initForm()\n    }\n\n    initForm() {\n        this.formRegister = this.formBuilder.group({\n            fullName: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        })\n    }\n\n    btClose() {\n        this.showWindow = false\n    }\n\n    btRegister() {\n        if (this.formRegister.valid) {\n            const { fullName, email, password } = this.formRegister.value\n\n            this.usersService.create(fullName, email, password)\n            .subscribe(response => {\n                if (response.status === 'success') {\n                    this.alertService.msgSuccess('Cadastro efetuado com sucesso!')\n                    this.showWindow = false\n                }\n            }, (error: HttpErrorResponse) => {\n                if (error.status === 400) {\n                    const errorMessage: string = <string>Object.values(error.error.message[0].constraints)[0]\n                    this.alertService.msgError(errorMessage)\n                } else if (error.status === 403) {\n                    this.alertService.msgError(error.error.message)\n                } else {\n                    this.alertService.msgError('Ocorreu um erro, tente novamente!')\n                }\n            })\n        } else {\n            this.alertService.msgError('Verifique se todos os campos foram preenchidos corretamente!')\n        }\n    }\n}","<app-popup *ngIf=\"showWindow\" (close)=\"btClose()\">\n    <h1 class=\"title\">Bem Vindo</h1>\n    <p>Faca seu cadastro, é totalmente gratuito</p>\n    <form [formGroup]=\"formRegister\">\n        <input type=\"text\" name=\"fullName\" id=\"fullName\" placeholder=\"Nome Completo\" formControlName=\"fullName\">\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n        <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" formControlName=\"password\">\n        <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirme sua senha\" formControlName=\"confirmPassword\" autocomplete=\"off\">\n        <button class=\"bt primary\" (click)=\"btRegister()\">Cadastrar</button>\n    </form>\n</app-popup>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RegisterComponent } from './register.component';\nimport { PopupModule } from '../popup/popup.module';\n\n@NgModule({\n    declarations: [\n        RegisterComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        PopupModule\n    ],\n    exports: [\n        RegisterComponent\n    ]\n})\nexport class RegisterModule {}","import { Injectable } from \"@angular/core\";\n\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegisterService {\n    registerSubject: Subject<boolean> = new Subject()\n\n    listenState() {\n        return this.registerSubject.asObservable()\n    }\n\n    showWindow() {\n        this.registerSubject.next(true)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authService: AuthService\n    ) {}\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // Se estiver logado então intercepta as conexões para adicionar o token no cabeçalho\n        if ( this.authService.isLogged() ) {\n            const token = this.authService.getToken()\n            \n            req = req.clone({\n                setHeaders: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n        }\n        return next.handle(req)\n    }\n    \n}","export const resumesMock = {\n    resumes: [\n        {\n            name: 'Daniel Vaz Villalobos Martins',\n            foto: '/assets/foto-perfil.jpg',\n            occupation: 'Full Stack Sênior | NodeJs | Java | AngularJS | DevOps',\n            dateOfBirth: '17/08/1983',\n            address: [\n                'Av. Vila Ema, 3793 ap 103C',\n                'Cep 03281-001 - São Paulo-SP'\n            ],\n            mobile: '(11) 96450-0218',\n            email: 'danielvazmartins@gmail.com',\n            linkedIn: 'linkedin.com/in/danielvazmartins',\n            github: 'github.com/danielvazmartins',\n            skills: [{\n                type: 'Back-end',\n                skills: ['NodeJs (Express, NestJs)', 'Java']\n            }, {\n                type: 'Front-end',\n                skills: ['Angular', 'JavaScript', 'TypeScript', 'PWA', 'Bootstrap', 'Material Design', 'CSS', 'SASS']\n            }, {\n                type: 'Database',\n                skills: ['Mysql', 'MongoDB', 'Elasticsearch', 'Sql Server', 'Postgree']\n            }, {\n                type: 'Mobile',\n                skills: ['Android com Java', 'iOS com Objective-C']\n            }, {\n                type: 'Infraestrutura',\n                skills: ['Administração de servidores Windows e Linux', 'Docker', 'Kubernets', 'Cloud (AWS e Azure), DevOps (Git, Jenkins, etc)']\n            }, {\n                type: 'Design',\n                skills: ['Photoshop', 'Illustrator', 'Adobe XD']\n            }, {\n                type: 'Idiomas',\n                skills: ['Inglês Técnico Avançado']\n            }\n            ],\n            aboutMe: 'Atuo na área de TI desde 2003, formado em Ciências da Computação e pós graduado em Gerenciamento de Projetos, além de ter algumas certificações estou sempre estudando através de plataformas como Alura, SchoolOfNet, Udemy, etc. Durante minha carreira participei de diversos projetos, utilizando tecnologias diferentes, sempre com o foco em desenvolvimento mas atuando também na parte de infra estrutura e DevOps, adquirindo um grande conhecimento de toda área de TI.',\n            professionalGoals: 'Atuar na área de desenvolvimento, seja como full-stack, back-end (NodeJs e Java), front-end (Angular), ou até mesmo com desenvolvimentos de Apps Nativos ou DevOps. Sempre me atualizando e pondo em prática os conhecimentos adquiridos. ',\n            academicQualifications: [{\n                dateConclusion: '2017',\n                institution: 'Universidade Metodista de São Paulo',\n                course: 'Pós Graduação em Gerenciamento de Projetos de TI com práticas alinhadas ao PMI'\n            },\n            {\n                dateConclusion: '2005',\n                institution: 'UniFEI  -  Centro Universitário da FEI',\n                course: 'Bacharel em Ciências da Computação'\n            }\n            ],\n            certifications: [\n                {\n                    dateConclusion: '08/2023',\n                    institution: 'Microsoft',\n                    course: 'AZ-204 Azure Developer Associate'\n                }, {\n                    dateConclusion: '11/2021',\n                    institution: 'Microsoft',\n                    course: 'AZ-900 Azure Fundamentals'\n                }\n            ],\n            othersCertifications: [\n                {\n                    dateConclusion: '04/2013',\n                    institution: 'VTEX',\n                    course: 'VTEX Interface Developer Certified (VID)',\n                    show: false\n                }, {\n                    dateConclusion: '08/2011',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Microsoft Exchange Server 2010, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '12/2010',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Windows 7, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '11/2010',\n                    institution: 'BlackBerry',\n                    course: 'BlackBerry Certified Server Support Specialist (v5.0)',\n                    show: false\n                }, {\n                    dateConclusion: '10/2010',\n                    institution: 'BlackBerry',\n                    course: 'BlackBerry Certified Support Specialist (v5.0)',\n                    show: false\n                }, {\n                    dateConclusion: '04/2010',\n                    institution: 'Microsoft',\n                    course: 'MCTS – Microsoft Windows SharePoint Services 3.0, Configuration',\n                    show: true\n                }, {\n                    dateConclusion: '11/2009',\n                    institution: 'Microsoft',\n                    course: 'MCSA - Microsoft Windows Server 2003 Network Infrastructure',\n                    show: true\n                }, {\n                    dateConclusion: '05/2009',\n                    institution: 'Microsoft',\n                    course: 'MCSA - Microsoft Windows Server 2003 Environment',\n                    show: true\n                }, {\n                    dateConclusion: '08/2008',\n                    institution: 'Cisco',\n                    course: 'Cisco Certified Network Associate - Cisco ID# CSCO10955792',\n                    show: true\n                }\n            ],\n            extraCourses: [{\n                dateConclusion: '09/2020',\n                institution: 'IGTI (XP Educação)',\n                workload: '148h / 2 meses',\n                course: 'Bootcamp Desenvolvedor Mobile Apps (Android, React Native, Flutter)',\n                show: true\n            }, {\n                dateConclusion: '07/2020',\n                institution: 'IGTI (XP Educação)',\n                workload: '148h / 2 meses',\n                course: 'Bootcamp FullStack Developer (NodeJs, React)',\n                show: true\n            }, {\n                dateConclusion: '01/2015',\n                institution: 'Saga',\n                workload: '408 horas / 2 anos',\n                course: 'Computação Gráfica (Photoshop, Illustrator, Dreamweaver, Flash, Premiere, AfterEffects, Maya, etc)',\n                show: true\n            }, {\n                dateConclusion: '05/2014',\n                institution: 'Clarify Treinamentos',\n                workload: '24 horas',\n                course: 'Microsoft Project 2013 - Gerenciamento de Projetos',\n                show: false\n            }, {\n                dateConclusion: '01/2011',\n                institution: 'CNA',\n                workload: '2 módulos',\n                course: 'Inglês - Advanced Conversation Course',\n                show: true\n            }, {\n                dateConclusion: '07/2010',\n                institution: 'Brás & Figueiredo',\n                workload: '20 horas',\n                course: '2824 – Implementing Microsoft Internet Security and Acceleration Server 2004',\n                show: false\n            }, {\n                dateConclusion: '03/2010',\n                institution: 'Brás & Figueiredo',\n                workload: '20 horas',\n                course: '6292 – Installing and Configuring Windows 7 Client',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2277 – Implementing, Managing, and Maintaining a MS Win 2003 Network Infrastructure: Network Services',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '16 horas',\n                course: '2276 – Implementing a Microsoft Windows Server 2003 Network Insfrastructure : Network Hosts',\n                show: false\n            }, {\n                dateConclusion: '12/2008',\n                institution: 'CNA',\n                workload: '9 módulos',\n                course: 'Inglês - Basic, Intermediate, Advanced and High Advanced',\n                show: true\n            }, {\n                dateConclusion: '10/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '24 horas',\n                course: '2275 – Maintaining a Microsoft Windows Server 2003 Enviroment',\n                show: false\n            }, {\n                dateConclusion: '09/2008',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2274 – Managing a Microsoft Windows Server 2003 Environment',\n                show: false\n            }, {\n                dateConclusion: '08/2007',\n                institution: 'Green Treinamento',\n                workload: '8 horas',\n                course: 'Introdução a Firewall – Linux',\n                show: true\n            }, {\n                dateConclusion: '08/2007',\n                institution: 'Green Treinamento',\n                workload: '40 horas',\n                course: 'LPI 102 – Administração de Redes Linux',\n                show: true\n            }, {\n                dateConclusion: '07/2007',\n                institution: 'Green Treinamento',\n                workload: '40 horas',\n                course: 'LPI 101 – Administração de Sistemas Linux',\n                show: true\n            }, {\n                dateConclusion: '09/2006',\n                institution: 'Brás & Figueiredo',\n                workload: '40 horas',\n                course: '2400 – Implementing and Managing Microsoft Exchange Server 2003',\n                show: false\n            }\n            ],\n            professionalExperience: [\n                {\n                    dateFrom: '19/04/2021',\n                    dateTo: '21/09/2023',\n                    company: 'F1RST Digital Services (Santander)',\n                    position: 'Analista de Desenvolvimento de Sistemas Sênior',\n                    description: [\n                        'Desenvolvimento de sistemas FullStack utilizando NodeJs (Express e NestJs), Java, Angular, MongoDB, ElastichSearch e desenvolvimento de DevOps no Jenkins (Groovy) fazendo intregação com Openshift, Azure e AWS',\n                        'Utilizando boas práticas de projeto, testes unitários (TDD) e seguindo padrão de projeto Agile (Scrum) e Jira',\n                        'Utilização de ferramentas durante o desenvolvimento até o deploy como Git, Jenkins, Docker, Kubernets, Openshift, Sonar, Fortify, etc'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '14/08/2018',\n                    dateTo: '16/04/2021',\n                    company: 'MJV Technology & Innovation (Santander)',\n                    position: 'Analista Full Stack',\n                    description: [\n                        'Desenvolvimento de sistemas FullStack utilizando NodeJs (Express e NestJs), Angular, MongoDB e ElastichSearch.',\n                        'Utilizando boas práticas de projeto, testes unitários (TDD) e seguindo padrão de projeto Agile (Scrum) e Jira',\n                        'Utilização de ferramentas durante o desenvolvimento até o deploy como Git, Jenkins, Docker, Kubernets, Openshift, Sonar, Fortify, etc'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '13/04/2009',\n                    dateTo: '27/07/2018',\n                    company: 'Viewit Comércio e Técnologia LTDA',\n                    position: 'Analista de TI Pleno',\n                    description: [\n                        '<b>Até 2018 -</b> Desenvolvimento de novos projetos em NodeJs com Angular6, manutenção dos projetos existentes em Java ou Nativos. Gerenciamento dos servidores na Amazon AWS',\n                        '<b>Até 2013 -</b> Desenvolvimento de aplicativos para Android (Java), Iphone (Objective-C), Web Mobile (HTML, CSS, JQuery). Desenvolvimento do site da empresa (PHP, XHTML). Plataformas de comércio eletrônico (VTEX e Magento). Aplicativos na AppStore (Onofre, John John Denim, Lelis Blanc, By Tennis), no Google Play (Onofre)',\n                        '<b>Até 2011 -</b> Instalação e gerenciamento de infraestrutura para provedor (Hosting de Exchange 2007 e 2010, Zimbra, Postfix, BES, Web com Plesk, Sharepoint, DNS, VMWare, etc). Desenvolvimento de painel de controle do provedor (PHP), webservices de integração (C#), MTA para gerenciamento de e-mail e anti-span (JAVA)'\n                    ],\n                    show: true\n                }, {\n                    dateFrom: '29/03/2004',\n                    dateTo: '26/03/2009',\n                    company: 'Ventiladores Bernauer S.A.',\n                    position: 'Analista de Sistemas e Administrador de Redes',\n                    description: [\n                        'Desenvolvimento de sistemas para uso interno em diversas áreas (PCP, Vendas, Engenharia, Almoxarifado, etc), integração com sistemas de terceiros (ERP - RM), levantamento das necessidades dos usuários, modelagem de dados. Principais ferramentas: Delphi 7, Sql Server 2000, Postgre, DBF, Rave Report, FastCube, etc.',\n                        'Implantação, manutenção e gerenciamento dos servidores (SBS 2003 com Exchange 2003, SQL Server 2000, WSUS, NTBackup. Windows 2003 com Terminal Service. Slackware como servidor de arquivos com SAMBA integrado com o AD do SBS 2003. Slackware como firewall utilizando IPTABLES, SQUID, SARG, OPENVPN). RAID em linux e Windows.'\n                    ],\n                    show: true\n                },\n                {\n                    dateFrom: '18/08/2003',\n                    dateTo: '31/12/2003',\n                    company: 'Home Doctor',\n                    position: 'Suporte Técnico (Estagiário)',\n                    description: ['Suporte interno aos usuários, instalação e configuração de computadores com Windows NT, 2000 e XP, configuração de rede, acessos e restrições de usuários, rotinas de backup, etc.'],\n                    show: false\n                },\n                {\n                    dateFrom: '17/06/2003',\n                    dateTo: '30/07/2003',\n                    company: 'Bohm Interal',\n                    position: 'Analista Programador (Estagiário)',\n                    description: ['Desenvolvimento de programa de CRM na linguagem Delphi, com banco de dados Oracle, utilizando SQL e PL/SQL. '],\n                    show: false\n                }\n            ]\n        }\n    ]\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    constructor(\n        private http: HttpClient,\n        private router: Router\n    ) {}\n\n    login(email: string, password: string) {\n        const params = new HttpParams()\n        .set('username', email)\n        .set('password', password)\n\n        return this.http.post('/api/auth/login', params, {observe: 'response'})\n        .pipe(\n            map((response: HttpResponse<any>) => {\n                const token = response.headers.get('x-access-token')\n                localStorage.setItem('access-token', token)\n            })\n        )\n    }\n\n    logout() {\n        localStorage.removeItem('access-token')\n        this.router.navigateByUrl('/home')\n    }\n\n    isLogged(): boolean {\n        return !!this.getToken()\n    }\n\n    getToken():string {\n        return localStorage.getItem('access-token')\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { resumesMock } from \"../mocks/resumes.mock\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResumeService {\n    constructor(\n        private http: HttpClient\n    ) {}\n    \n    getResumeId(hostname: string): number {\n        if ( hostname.endsWith('danielvazmartins.com.br') ) return 0\n        if ( hostname.endsWith('rozanaaquino.com.br') ) return 1\n        return 0\n    }\n\n    getStyleName(hostname: string): string {\n        if ( hostname.endsWith('danielvazmartins.com.br') ) return 'brow'\n        if ( hostname.endsWith('rozanaaquino.com.br') ) return 'gray'\n        return 'brow'\n    }\n\n    // Retornar currículo de mock (para desenvolvimento sem o banco de dados)\n    getResume(id: number) {\n        return resumesMock.resumes[id]\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Resume } from '../interfaces/resume.interface';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResumesService {\n    resourceUrl = '/api/resumes'\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService\n    ) {}\n\n    // Retorna a lista de curriculos do usuario logado no Painel\n    getAll(): Observable<any> {\n        return this.http.get(this.resourceUrl)\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            }),\n            catchError((error: HttpErrorResponse) => {\n                if (error.status === 401) this.authService.logout()\n                return of()\n            })\n        )\n    }\n\n    getOne(resumeId: string): Observable<any> {\n        return this.http.get(`${this.resourceUrl}/${resumeId}`)\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            })\n        )\n    }\n\n    getByHost(domain: string): Observable<any> {\n        return this.http.get(`${this.resourceUrl}/public`, { params: { domain } })\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            })\n        )\n    }\n\n    // Cadastra um novo currículo\n    create(resume: Resume): Observable<any> {\n        return this.http.post(this.resourceUrl, resume)\n    }\n\n    // Atualiza um currículo\n    update(resumeId: string, resume: Resume): Observable<any> {\n        return this.http.put(`${this.resourceUrl}/${resumeId}`, resume)\n    }\n\n    // Remove um currículo\n    delete(resumeId: string): Observable<any> {\n        return this.http.delete(`${this.resourceUrl}/${resumeId}`)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService\n    ) {}\n\n    getData() {\n        return this.http.get('/api/users')\n        .pipe(\n            map((response: any) => {\n                return (response.status === 'success')? response['data']: []\n            }),\n            catchError((error: HttpErrorResponse) => {\n                if (error.status === 401) this.authService.logout()\n                return of()\n            })\n        )\n    }\n\n    create(fullName: string, email: string, password: string): Observable<any> {\n        const params = new HttpParams()\n        .set('fullName', fullName)\n        .set('email', email)\n        .set('password', password)\n\n        return this.http.post('/api/users', params)\n    }\n\n    update(fullName: string, email: string): Observable<any> {\n        const params = new HttpParams()\n        .set('fullName', fullName)\n        .set('email', email)\n\n        return this.http.put('/api/users', params)\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}